##############################################################################
##############################################################################
#
# NOTE!
#
# Please read the README.md file in this directory that defines what should
# be placed in this file
#
##############################################################################
##############################################################################

name: PR Workflow
on:
  pull_request:
    branches-ignore:
      - "master"

env:
  CODECOV_UNIQUE_NAME: CODECOV_UNIQUE_NAME-${{ github.run_id }}-${{ github.run_number }}

jobs:
  Flutter-Codebase-Check:
    name: Checking codebase
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: "17.0"
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.27.3"
          channel: "stable"
      - name: Set default branch
        run: git remote set-head origin --auto
      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq
      - name: Get changed files
        id: changed-files
        run: |
          git fetch origin ${{ github.base_ref }}
          git diff --name-only origin/${{ github.base_ref }}...HEAD > changed_files.txt
          echo "all_changed_files=$(cat changed_files.txt | jq -R -s -c 'split("\n") | map(select(. != ""))')" >> $GITHUB_OUTPUT
          echo "all_changed_files_count=$(wc -l < changed_files.txt | tr -d ' ')" >> $GITHUB_OUTPUT
      - name: List all changed files
        run: |
          echo "${{ steps.changed-files.outputs.all_changed_files }}" | jq -r '.[]' | while read -r file; do
            echo "$file was changed"
          done
      - name: Running pub get in talawa_lint
        run: cd talawa_lint && flutter pub get && cd ..
      - name: Running pub get to fetch dependencies
        run: flutter pub get
      - name: Checking for correct formatting of code
        run: dart format --set-exit-if-changed .
      - name: setup python
        uses: actions/setup-python@v5
      - name: Count lines of code in each file
        run: chmod +x ./.github/workflows/scripts/countline.py
      - name: Running count lines
        run: ./.github/workflows/scripts/countline.py --exclude_directories test/ --exclude_files lib/custom_painters/talawa_logo.dart lib/custom_painters/language_icon.dart lib/custom_painters/whatsapp_logo.dart lib/utils/queries.dart lib/view_model/after_auth_view_models/profile_view_models/profile_page_view_model.dart lib/view_model/pre_auth_view_models/select_organization_view_model.dart lib/views/after_auth_screens/profile/profile_page.dart lib/view_model/main_screen_view_model.dart lib/views/after_auth_screens/events/create_event_page.dart lib/views/after_auth_screens/org_info_screen.dart lib/views/after_auth_screens/events/manage_volunteer_group.dart lib/views/after_auth_screens/events/create_agenda_item_page.dart lib/views/after_auth_screens/events/edit_agenda_item_page.dart lib/utils/event_queries.dart
      - name: Check for presence of ignore directives
        run: chmod +x ./.github/workflows/scripts/check_ignore.py
      - name: Run check_ignore
        run: |
          git branch
          git checkout -b temp_branch
          git branch
          git checkout develop-postgres
          git pull
          git branch
          git diff --name-only develop-postgres..HEAD
          git checkout temp_branch
          pip install GitPython
          python ./.github/workflows/scripts/check_ignore.py --repository ${{github.repository}} --merge_branch_name ${{github.head_ref}}
      - name: Compare translation files
        run: |
          chmod +x .github/workflows/scripts/compare_translations.py
          python .github/workflows/scripts/compare_translations.py --directory lang
      - name: Analysing codebase for default linting
        run: flutter analyze --no-pub
      - name: Analysing codebase for custom linting
        run: dart run custom_lint
      - name: Check if branches are different
        if: ${{ github.event.pull_request.base.ref == github.event.pull_request.head.ref }}
        run: |
          echo "Source Branch ${{ github.event.pull_request.head.ref }}"
          echo "Target Branch ${{ github.event.pull_request.base.ref }}"
          echo "Error: Source and Target Branches are the same"
          exit 1

  Branch-check:
    if: ${{ github.actor != 'dependabot[bot]' && !contains(github.event.pull_request.labels.*.name, 'ignore-sensitive-files-pr') }}
    name: "Base branch check"
    runs-on: ubuntu-latest
    steps:
      - name: Check base branch
        if: github.event.pull_request.base.ref != 'develop-postgres'
        run: |
          echo "PR is not against develop-postgres branch"
          exit 1

  Check-Sensitive-Files:
    if: ${{ github.actor != 'dependabot[bot]' && !contains(github.event.pull_request.labels.*.name, 'ignore-sensitive-files-pr') }}
    name: Check sensitive files
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Get changed sensitive files
        id: changed-unauth-files
        run: |
          git fetch origin ${{ github.base_ref }}
          git diff --name-only origin/${{ github.base_ref }}...HEAD > changed_files.txt
          git diff --name-only --diff-filter=D origin/${{ github.base_ref }}...HEAD > deleted_files.txt

          sensitive_files=(
            "CODE_OF_CONDUCT.md"
            "CODE_STYLE.md"
            "CONTRIBUTING.md"
            "DOCUMENTATION.md"
            "INSTALLATION.md"
            "ISSUE_GUIDELINES.md"
            "PR_GUIDELINES.md"
            "README.md"
            "CODEOWNERS"
            "LICENSE"  
            ".github/**"
            "analysis_options.yaml"
            "pubspec.yaml"
            "pubspec.lock"
            "lib/main.dart"
          )

          any_changed=false
          any_deleted=false
          changed_files_list=()

          while IFS= read -r file; do
            for pattern in "${sensitive_files[@]}"; do
              if [[ "$file" == $pattern ]]; then
                any_changed=true
                changed_files_list+=("$file")
                break
              fi
            done
          done < changed_files.txt

          while IFS= read -r file; do
            for pattern in "${sensitive_files[@]}"; do
              if [[ "$file" == $pattern ]]; then
                any_deleted=true
                changed_files_list+=("$file")
                break
              fi
            done
          done < deleted_files.txt

          echo "any_changed=$any_changed" >> $GITHUB_OUTPUT
          echo "any_deleted=$any_deleted" >> $GITHUB_OUTPUT
          echo "all_changed_files=$(printf '%s\n' "${changed_files_list[@]}" | jq -R -s -c 'split("\n") | map(select(. != ""))')" >> $GITHUB_OUTPUT
      - name: List changed unauthorized files
        if: ${{ steps.changed-unauth-files.outputs.any_changed == 'true' || steps.changed-unauth-files.outputs.any_deleted == 'true' }}
        run: |
          echo "${{ steps.changed-unauth-files.outputs.all_changed_files }}" | jq -r '.[]' | while read -r file; do
            echo "$file is unauthorized"
          done
          echo "Apply 'ignore-sensitive-files-pr' label to override"
          exit 1

  Count-Changed-Files:
    if: ${{ github.actor != 'dependabot[bot]' }}
    name: Check changed files count
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Get changed files count
        id: changed-files
        run: |
          git fetch origin ${{ github.base_ref }}
          git diff --name-only origin/${{ github.base_ref }}...HEAD > changed_files.txt
          echo "all_changed_files_count=$(wc -l < changed_files.txt | tr -d ' ')" >> $GITHUB_OUTPUT
      - name: Check file count
        if: steps.changed-files.outputs.all_changed_files_count > 100
        run: |
          echo "Too many files changed (${{ steps.changed-files.outputs.all_changed_files_count }})"
          exit 1

  # Remaining jobs remain unchanged as they don't use changed-files action
  Flutter-Testing:
    name: Testing codebase
    runs-on: ubuntu-latest
    needs: [Flutter-Codebase-Check, Python-Compliance]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: "17.0"
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.27.3"
          channel: "stable"
      - name: Running pub get
        run: flutter pub get
      - name: Codebase testing
        run: flutter test --coverage
      - name: Upload coverage
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          name: "${{env.CODECOV_UNIQUE_NAME}}"
      - name: Test coverage
        uses: VeryGoodOpenSource/very_good_coverage@v3
        with:
          path: "./coverage/lcov.info"
          min_coverage: 92.0

  Android-Build:
    name: Android build
    runs-on: ubuntu-latest
    needs: [Flutter-Testing]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: "17.0"
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.27.3"
          channel: "stable"
      - name: Build APK
        run: flutter build apk

  iOS-Build:
    name: iOS build
    runs-on: macos-latest
    needs: [Flutter-Testing]
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.27.3"
          channel: "stable"
      - name: Build iOS
        run: flutter build ios --release --no-codesign

  Test-Docusaurus-Deployment:
    name: Test docs deployment
    runs-on: ubuntu-latest
    needs: [iOS-Build, Android-Build]
    if: ${{ github.actor != 'dependabot[bot]' && github.event.pull_request.base.ref == 'develop-postgres' }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20.x"
      - name: Install dependencies
        working-directory: ./docs
        run: npm install
      - name: Build docs
        working-directory: ./docs
        run: npm run build

  Validate-Coderabbit:
    name: Validate CodeRabbit
    runs-on: ubuntu-latest
    if: github.actor != 'dependabot[bot]'
    needs: [Test-Docusaurus-Deployment]
    steps:
      - uses: actions/checkout@v4
      - name: Validate approval
        run: |
          chmod +x .github/workflows/scripts/validate-coderabbit.sh
          .github/workflows/scripts/validate-coderabbit.sh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          GITHUB_REPOSITORY: ${{ github.repository }}

  Python-Compliance:
    name: Python checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: 3.11
      - uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
      - name: Install dependencies
        run: |
          python3 -m venv venv
          source venv/bin/activate
          pip install -r .github/workflows/requirements.txt
      - name: Run Black
        run: |
          source venv/bin/activate
          black --check .
      - name: Run Flake8
        run: |
          source venv/bin/activate
          flake8 --ignore E402,E722,E203,F401,W503 .github scripts
      - name: Run pydocstyle
        run: |
          source venv/bin/activate
          pydocstyle --add-ignore=D415,D205 .github scripts
      - name: Check docstrings
        run: |
          source venv/bin/activate
          python .github/workflows/scripts/check_docstrings.py --directories .github scripts
          