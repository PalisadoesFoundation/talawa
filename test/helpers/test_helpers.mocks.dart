// Mocks generated by Mockito 5.3.2 from annotations
// in talawa/test/helpers/test_helpers.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;
import 'dart:io' as _i15;

import 'package:connectivity_plus/connectivity_plus.dart' as _i23;
import 'package:connectivity_plus_platform_interface/connectivity_plus_platform_interface.dart'
    as _i24;
import 'package:flutter/material.dart' as _i1;
import 'package:graphql_flutter/graphql_flutter.dart' as _i3;
import 'package:mockito/mockito.dart' as _i2;
import 'package:qr_code_scanner/src/qr_code_scanner.dart' as _i29;
import 'package:qr_code_scanner/src/types/barcode.dart' as _i30;
import 'package:qr_code_scanner/src/types/camera.dart' as _i31;
import 'package:qr_code_scanner/src/types/features.dart' as _i10;
import 'package:talawa/enums/enums.dart' as _i22;
import 'package:talawa/models/chats/chat_list_tile_data_model.dart' as _i18;
import 'package:talawa/models/chats/chat_message.dart' as _i19;
import 'package:talawa/models/events/event_model.dart' as _i16;
import 'package:talawa/models/organization/org_info.dart' as _i5;
import 'package:talawa/models/post/post_model.dart' as _i13;
import 'package:talawa/models/task/task_model.dart' as _i35;
import 'package:talawa/models/user/user_info.dart' as _i6;
import 'package:talawa/services/chat_service.dart' as _i17;
import 'package:talawa/services/comment_service.dart' as _i32;
import 'package:talawa/services/database_mutation_functions.dart' as _i8;
import 'package:talawa/services/event_service.dart' as _i9;
import 'package:talawa/services/graphql_config.dart' as _i11;
import 'package:talawa/services/navigation_service.dart' as _i7;
import 'package:talawa/services/org_service.dart' as _i26;
import 'package:talawa/services/post_service.dart' as _i12;
import 'package:talawa/services/task_service.dart' as _i34;
import 'package:talawa/services/third_party_service/multi_media_pick_service.dart'
    as _i14;
import 'package:talawa/services/user_config.dart' as _i20;
import 'package:talawa/utils/validators.dart' as _i28;
import 'package:talawa/view_model/after_auth_view_models/event_view_models/create_event_view_model.dart'
    as _i36;
import 'package:talawa/view_model/after_auth_view_models/event_view_models/explore_events_view_model.dart'
    as _i27;
import 'package:talawa/view_model/lang_view_model.dart' as _i21;
import 'package:talawa/view_model/pre_auth_view_models/signup_details_view_model.dart'
    as _i25;
import 'package:talawa/view_model/theme_view_model.dart' as _i33;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeGlobalKey_0<T extends _i1.State<_i1.StatefulWidget>>
    extends _i2.SmartFake implements _i1.GlobalKey<T> {
  _FakeGlobalKey_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeHttpLink_1 extends _i2.SmartFake implements _i3.HttpLink {
  _FakeHttpLink_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWebSocketLink_2 extends _i2.SmartFake implements _i3.WebSocketLink {
  _FakeWebSocketLink_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGraphQLClient_3 extends _i2.SmartFake implements _i3.GraphQLClient {
  _FakeGraphQLClient_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDefaultPolicies_4 extends _i2.SmartFake
    implements _i3.DefaultPolicies {
  _FakeDefaultPolicies_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLink_5 extends _i2.SmartFake implements _i3.Link {
  _FakeLink_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGraphQLCache_6 extends _i2.SmartFake implements _i3.GraphQLCache {
  _FakeGraphQLCache_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeQueryManager_7 extends _i2.SmartFake implements _i3.QueryManager {
  _FakeQueryManager_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeObservableQuery_8<TParsed> extends _i2.SmartFake
    implements _i3.ObservableQuery<TParsed> {
  _FakeObservableQuery_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeQueryResult_9<TParsed extends Object?> extends _i2.SmartFake
    implements _i3.QueryResult<TParsed> {
  _FakeQueryResult_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStreamController_10<T> extends _i2.SmartFake
    implements _i4.StreamController<T> {
  _FakeStreamController_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeOrgInfo_11 extends _i2.SmartFake implements _i5.OrgInfo {
  _FakeOrgInfo_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUser_12 extends _i2.SmartFake implements _i6.User {
  _FakeUser_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeNavigationService_13 extends _i2.SmartFake
    implements _i7.NavigationService {
  _FakeNavigationService_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDataBaseMutationFunctions_14 extends _i2.SmartFake
    implements _i8.DataBaseMutationFunctions {
  _FakeDataBaseMutationFunctions_14(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTextEditingController_15 extends _i2.SmartFake
    implements _i1.TextEditingController {
  _FakeTextEditingController_15(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFocusNode_16 extends _i2.SmartFake implements _i1.FocusNode {
  _FakeFocusNode_16(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i1.DiagnosticLevel? minLevel = _i1.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeGraphQLError_17 extends _i2.SmartFake implements _i3.GraphQLError {
  _FakeGraphQLError_17(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEventService_18 extends _i2.SmartFake implements _i9.EventService {
  _FakeEventService_18(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSystemFeatures_19 extends _i2.SmartFake
    implements _i10.SystemFeatures {
  _FakeSystemFeatures_19(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTimeOfDay_20 extends _i2.SmartFake implements _i1.TimeOfDay {
  _FakeTimeOfDay_20(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDateTime_21 extends _i2.SmartFake implements DateTime {
  _FakeDateTime_21(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [NavigationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockNavigationService extends _i2.Mock implements _i7.NavigationService {
  @override
  _i1.GlobalKey<_i1.NavigatorState> get navigatorKey => (super.noSuchMethod(
        Invocation.getter(#navigatorKey),
        returnValue: _FakeGlobalKey_0<_i1.NavigatorState>(
          this,
          Invocation.getter(#navigatorKey),
        ),
      ) as _i1.GlobalKey<_i1.NavigatorState>);
  @override
  set navigatorKey(_i1.GlobalKey<_i1.NavigatorState>? _navigatorKey) =>
      super.noSuchMethod(
        Invocation.setter(
          #navigatorKey,
          _navigatorKey,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.Future<dynamic> pushScreen(
    String? routeName, {
    dynamic arguments,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #pushScreen,
          [routeName],
          {#arguments: arguments},
        ),
        returnValue: _i4.Future<dynamic>.value(),
      ) as _i4.Future<dynamic>);
  @override
  _i4.Future<dynamic> popAndPushScreen(
    String? routeName, {
    dynamic arguments,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #popAndPushScreen,
          [routeName],
          {#arguments: arguments},
        ),
        returnValue: _i4.Future<dynamic>.value(),
      ) as _i4.Future<dynamic>);
  @override
  _i4.Future<dynamic> pushReplacementScreen(
    String? routeName, {
    dynamic arguments,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #pushReplacementScreen,
          [routeName],
          {#arguments: arguments},
        ),
        returnValue: _i4.Future<dynamic>.value(),
      ) as _i4.Future<dynamic>);
  @override
  void fromInviteLink(
    List<String>? routeNames,
    List<dynamic>? arguments,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #fromInviteLink,
          [
            routeNames,
            arguments,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.Future<dynamic> removeAllAndPush(
    String? routeName,
    String? tillRoute, {
    dynamic arguments,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeAllAndPush,
          [
            routeName,
            tillRoute,
          ],
          {#arguments: arguments},
        ),
        returnValue: _i4.Future<dynamic>.value(),
      ) as _i4.Future<dynamic>);
  @override
  void pushDialog(_i1.Widget? dialog) => super.noSuchMethod(
        Invocation.method(
          #pushDialog,
          [dialog],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void showSnackBar(
    String? message, {
    Duration? duration = const Duration(seconds: 2),
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #showSnackBar,
          [message],
          {#duration: duration},
        ),
        returnValueForMissingStub: null,
      );
  @override
  void showTalawaErrorWidget(
    String? errorMessage, {
    Duration? duration = const Duration(seconds: 2),
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #showTalawaErrorWidget,
          [errorMessage],
          {#duration: duration},
        ),
        returnValueForMissingStub: null,
      );
  @override
  void showTalawaErrorDialog(String? errorMessage) => super.noSuchMethod(
        Invocation.method(
          #showTalawaErrorDialog,
          [errorMessage],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void pop() => super.noSuchMethod(
        Invocation.method(
          #pop,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [GraphqlConfig].
///
/// See the documentation for Mockito's code generation for more information.
class MockGraphqlConfig extends _i2.Mock implements _i11.GraphqlConfig {
  @override
  _i3.HttpLink get httpLink => (super.noSuchMethod(
        Invocation.getter(#httpLink),
        returnValue: _FakeHttpLink_1(
          this,
          Invocation.getter(#httpLink),
        ),
      ) as _i3.HttpLink);
  @override
  set httpLink(_i3.HttpLink? _httpLink) => super.noSuchMethod(
        Invocation.setter(
          #httpLink,
          _httpLink,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i3.WebSocketLink get webSocketLink => (super.noSuchMethod(
        Invocation.getter(#webSocketLink),
        returnValue: _FakeWebSocketLink_2(
          this,
          Invocation.getter(#webSocketLink),
        ),
      ) as _i3.WebSocketLink);
  @override
  set webSocketLink(_i3.WebSocketLink? _webSocketLink) => super.noSuchMethod(
        Invocation.setter(
          #webSocketLink,
          _webSocketLink,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set displayImgRoute(String? _displayImgRoute) => super.noSuchMethod(
        Invocation.setter(
          #displayImgRoute,
          _displayImgRoute,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.Future<dynamic> getToken() => (super.noSuchMethod(
        Invocation.method(
          #getToken,
          [],
        ),
        returnValue: _i4.Future<dynamic>.value(),
      ) as _i4.Future<dynamic>);
  @override
  _i3.GraphQLClient clientToQuery() => (super.noSuchMethod(
        Invocation.method(
          #clientToQuery,
          [],
        ),
        returnValue: _FakeGraphQLClient_3(
          this,
          Invocation.method(
            #clientToQuery,
            [],
          ),
        ),
      ) as _i3.GraphQLClient);
  @override
  _i3.GraphQLClient authClient() => (super.noSuchMethod(
        Invocation.method(
          #authClient,
          [],
        ),
        returnValue: _FakeGraphQLClient_3(
          this,
          Invocation.method(
            #authClient,
            [],
          ),
        ),
      ) as _i3.GraphQLClient);
}

/// A class which mocks [GraphQLClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockGraphQLClient extends _i2.Mock implements _i3.GraphQLClient {
  @override
  _i3.DefaultPolicies get defaultPolicies => (super.noSuchMethod(
        Invocation.getter(#defaultPolicies),
        returnValue: _FakeDefaultPolicies_4(
          this,
          Invocation.getter(#defaultPolicies),
        ),
      ) as _i3.DefaultPolicies);
  @override
  set defaultPolicies(_i3.DefaultPolicies? _defaultPolicies) =>
      super.noSuchMethod(
        Invocation.setter(
          #defaultPolicies,
          _defaultPolicies,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i3.Link get link => (super.noSuchMethod(
        Invocation.getter(#link),
        returnValue: _FakeLink_5(
          this,
          Invocation.getter(#link),
        ),
      ) as _i3.Link);
  @override
  _i3.GraphQLCache get cache => (super.noSuchMethod(
        Invocation.getter(#cache),
        returnValue: _FakeGraphQLCache_6(
          this,
          Invocation.getter(#cache),
        ),
      ) as _i3.GraphQLCache);
  @override
  _i3.QueryManager get queryManager => (super.noSuchMethod(
        Invocation.getter(#queryManager),
        returnValue: _FakeQueryManager_7(
          this,
          Invocation.getter(#queryManager),
        ),
      ) as _i3.QueryManager);
  @override
  set queryManager(_i3.QueryManager? _queryManager) => super.noSuchMethod(
        Invocation.setter(
          #queryManager,
          _queryManager,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i3.GraphQLClient copyWith({
    _i3.Link? link,
    _i3.GraphQLCache? cache,
    _i3.DefaultPolicies? defaultPolicies,
    bool? alwaysRebroadcast,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #copyWith,
          [],
          {
            #link: link,
            #cache: cache,
            #defaultPolicies: defaultPolicies,
            #alwaysRebroadcast: alwaysRebroadcast,
          },
        ),
        returnValue: _FakeGraphQLClient_3(
          this,
          Invocation.method(
            #copyWith,
            [],
            {
              #link: link,
              #cache: cache,
              #defaultPolicies: defaultPolicies,
              #alwaysRebroadcast: alwaysRebroadcast,
            },
          ),
        ),
      ) as _i3.GraphQLClient);
  @override
  _i3.ObservableQuery<TParsed> watchQuery<TParsed>(
          _i3.WatchQueryOptions<TParsed>? options) =>
      (super.noSuchMethod(
        Invocation.method(
          #watchQuery,
          [options],
        ),
        returnValue: _FakeObservableQuery_8<TParsed>(
          this,
          Invocation.method(
            #watchQuery,
            [options],
          ),
        ),
      ) as _i3.ObservableQuery<TParsed>);
  @override
  _i3.ObservableQuery<TParsed> watchMutation<TParsed>(
          _i3.WatchQueryOptions<TParsed>? options) =>
      (super.noSuchMethod(
        Invocation.method(
          #watchMutation,
          [options],
        ),
        returnValue: _FakeObservableQuery_8<TParsed>(
          this,
          Invocation.method(
            #watchMutation,
            [options],
          ),
        ),
      ) as _i3.ObservableQuery<TParsed>);
  @override
  _i4.Future<_i3.QueryResult<TParsed>> query<TParsed>(
          _i3.QueryOptions<TParsed>? options) =>
      (super.noSuchMethod(
        Invocation.method(
          #query,
          [options],
        ),
        returnValue: _i4.Future<_i3.QueryResult<TParsed>>.value(
            _FakeQueryResult_9<TParsed>(
          this,
          Invocation.method(
            #query,
            [options],
          ),
        )),
      ) as _i4.Future<_i3.QueryResult<TParsed>>);
  @override
  _i4.Future<_i3.QueryResult<TParsed>> mutate<TParsed>(
          _i3.MutationOptions<TParsed>? options) =>
      (super.noSuchMethod(
        Invocation.method(
          #mutate,
          [options],
        ),
        returnValue: _i4.Future<_i3.QueryResult<TParsed>>.value(
            _FakeQueryResult_9<TParsed>(
          this,
          Invocation.method(
            #mutate,
            [options],
          ),
        )),
      ) as _i4.Future<_i3.QueryResult<TParsed>>);
  @override
  _i4.Stream<_i3.QueryResult<TParsed>> subscribe<TParsed>(
          _i3.SubscriptionOptions<TParsed>? options) =>
      (super.noSuchMethod(
        Invocation.method(
          #subscribe,
          [options],
        ),
        returnValue: _i4.Stream<_i3.QueryResult<TParsed>>.empty(),
      ) as _i4.Stream<_i3.QueryResult<TParsed>>);
  @override
  _i4.Future<_i3.QueryResult<TParsed>> fetchMore<TParsed>(
    _i3.FetchMoreOptions? fetchMoreOptions, {
    required _i3.QueryOptions<TParsed>? originalOptions,
    required _i3.QueryResult<TParsed>? previousResult,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchMore,
          [fetchMoreOptions],
          {
            #originalOptions: originalOptions,
            #previousResult: previousResult,
          },
        ),
        returnValue: _i4.Future<_i3.QueryResult<TParsed>>.value(
            _FakeQueryResult_9<TParsed>(
          this,
          Invocation.method(
            #fetchMore,
            [fetchMoreOptions],
            {
              #originalOptions: originalOptions,
              #previousResult: previousResult,
            },
          ),
        )),
      ) as _i4.Future<_i3.QueryResult<TParsed>>);
  @override
  Map<String, dynamic>? readQuery(
    _i3.Request? request, {
    bool? optimistic = true,
  }) =>
      (super.noSuchMethod(Invocation.method(
        #readQuery,
        [request],
        {#optimistic: optimistic},
      )) as Map<String, dynamic>?);
  @override
  Map<String, dynamic>? readFragment(
    _i3.FragmentRequest? fragmentRequest, {
    bool? optimistic = true,
  }) =>
      (super.noSuchMethod(Invocation.method(
        #readFragment,
        [fragmentRequest],
        {#optimistic: optimistic},
      )) as Map<String, dynamic>?);
  @override
  void writeQuery(
    _i3.Request? request, {
    required Map<String, dynamic>? data,
    bool? broadcast = true,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #writeQuery,
          [request],
          {
            #data: data,
            #broadcast: broadcast,
          },
        ),
        returnValueForMissingStub: null,
      );
  @override
  void writeFragment(
    _i3.FragmentRequest? fragmentRequest, {
    bool? broadcast = true,
    required Map<String, dynamic>? data,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #writeFragment,
          [fragmentRequest],
          {
            #broadcast: broadcast,
            #data: data,
          },
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.Future<List<_i3.QueryResult<Object?>?>>? resetStore(
          {bool? refetchQueries = true}) =>
      (super.noSuchMethod(Invocation.method(
        #resetStore,
        [],
        {#refetchQueries: refetchQueries},
      )) as _i4.Future<List<_i3.QueryResult<Object?>?>>?);
}

/// A class which mocks [PostService].
///
/// See the documentation for Mockito's code generation for more information.
class MockPostService extends _i2.Mock implements _i12.PostService {
  @override
  _i4.Stream<List<_i13.Post>> get postStream => (super.noSuchMethod(
        Invocation.getter(#postStream),
        returnValue: _i4.Stream<List<_i13.Post>>.empty(),
      ) as _i4.Stream<List<_i13.Post>>);
  @override
  _i4.Stream<_i13.Post> get updatedPostStream => (super.noSuchMethod(
        Invocation.getter(#updatedPostStream),
        returnValue: _i4.Stream<_i13.Post>.empty(),
      ) as _i4.Stream<_i13.Post>);
  @override
  void setOrgStreamSubscription() => super.noSuchMethod(
        Invocation.method(
          #setOrgStreamSubscription,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.Future<void> getPosts() => (super.noSuchMethod(
        Invocation.method(
          #getPosts,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<void> addLike(String? postID) => (super.noSuchMethod(
        Invocation.method(
          #addLike,
          [postID],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<void> removeLike(String? postID) => (super.noSuchMethod(
        Invocation.method(
          #removeLike,
          [postID],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  void addCommentLocally(String? postID) => super.noSuchMethod(
        Invocation.method(
          #addCommentLocally,
          [postID],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [MultiMediaPickerService].
///
/// See the documentation for Mockito's code generation for more information.
class MockMultiMediaPickerService extends _i2.Mock
    implements _i14.MultiMediaPickerService {
  @override
  _i4.Stream<dynamic> get fileStream => (super.noSuchMethod(
        Invocation.getter(#fileStream),
        returnValue: _i4.Stream<dynamic>.empty(),
      ) as _i4.Stream<dynamic>);
  @override
  _i4.Future<_i15.File?> getPhotoFromGallery({bool? camera = false}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPhotoFromGallery,
          [],
          {#camera: camera},
        ),
        returnValue: _i4.Future<_i15.File?>.value(),
      ) as _i4.Future<_i15.File?>);
  @override
  _i4.Future<_i15.File?> cropImage({required _i15.File? imageFile}) =>
      (super.noSuchMethod(
        Invocation.method(
          #cropImage,
          [],
          {#imageFile: imageFile},
        ),
        returnValue: _i4.Future<_i15.File?>.value(),
      ) as _i4.Future<_i15.File?>);
}

/// A class which mocks [EventService].
///
/// See the documentation for Mockito's code generation for more information.
class MockEventService extends _i2.Mock implements _i9.EventService {
  @override
  _i4.Stream<_i16.Event> get eventStream => (super.noSuchMethod(
        Invocation.getter(#eventStream),
        returnValue: _i4.Stream<_i16.Event>.empty(),
      ) as _i4.Stream<_i16.Event>);
  @override
  void setOrgStreamSubscription() => super.noSuchMethod(
        Invocation.method(
          #setOrgStreamSubscription,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.Future<void> getEvents() => (super.noSuchMethod(
        Invocation.method(
          #getEvents,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<dynamic> fetchRegistrantsByEvent(String? eventId) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchRegistrantsByEvent,
          [eventId],
        ),
        returnValue: _i4.Future<dynamic>.value(),
      ) as _i4.Future<dynamic>);
  @override
  _i4.Future<dynamic> registerForAnEvent(String? eventId) =>
      (super.noSuchMethod(
        Invocation.method(
          #registerForAnEvent,
          [eventId],
        ),
        returnValue: _i4.Future<dynamic>.value(),
      ) as _i4.Future<dynamic>);
  @override
  _i4.Future<dynamic> deleteEvent(String? eventId) => (super.noSuchMethod(
        Invocation.method(
          #deleteEvent,
          [eventId],
        ),
        returnValue: _i4.Future<dynamic>.value(),
      ) as _i4.Future<dynamic>);
  @override
  _i4.Future<void> editEvent({
    required String? eventId,
    required Map<String, dynamic>? variables,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #editEvent,
          [],
          {
            #eventId: eventId,
            #variables: variables,
          },
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [ChatService].
///
/// See the documentation for Mockito's code generation for more information.
class MockChatService extends _i2.Mock implements _i17.ChatService {
  @override
  _i4.Stream<_i3.QueryResult<Object?>> get chatStream => (super.noSuchMethod(
        Invocation.getter(#chatStream),
        returnValue: _i4.Stream<_i3.QueryResult<Object?>>.empty(),
      ) as _i4.Stream<_i3.QueryResult<Object?>>);
  @override
  set chatStream(_i4.Stream<_i3.QueryResult<Object?>>? _chatStream) =>
      super.noSuchMethod(
        Invocation.setter(
          #chatStream,
          _chatStream,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.Stream<_i18.ChatListTileDataModel> get chatListStream =>
      (super.noSuchMethod(
        Invocation.getter(#chatListStream),
        returnValue: _i4.Stream<_i18.ChatListTileDataModel>.empty(),
      ) as _i4.Stream<_i18.ChatListTileDataModel>);
  @override
  _i4.Stream<_i19.ChatMessage> get chatMessagesStream => (super.noSuchMethod(
        Invocation.getter(#chatMessagesStream),
        returnValue: _i4.Stream<_i19.ChatMessage>.empty(),
      ) as _i4.Stream<_i19.ChatMessage>);
  @override
  _i4.Future<void> sendMessageToDirectChat(
    String? chatId,
    String? messageContent,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendMessageToDirectChat,
          [
            chatId,
            messageContent,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<void> getDirectChatsByUserId() => (super.noSuchMethod(
        Invocation.method(
          #getDirectChatsByUserId,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<void> getDirectChatMessagesByChatId(dynamic chatId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDirectChatMessagesByChatId,
          [chatId],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}

/// A class which mocks [UserConfig].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserConfig extends _i2.Mock implements _i20.UserConfig {
  @override
  _i4.Stream<_i5.OrgInfo> get currentOrgInfoStream => (super.noSuchMethod(
        Invocation.getter(#currentOrgInfoStream),
        returnValue: _i4.Stream<_i5.OrgInfo>.empty(),
      ) as _i4.Stream<_i5.OrgInfo>);
  @override
  _i4.StreamController<_i5.OrgInfo> get currentOrgInfoController =>
      (super.noSuchMethod(
        Invocation.getter(#currentOrgInfoController),
        returnValue: _FakeStreamController_10<_i5.OrgInfo>(
          this,
          Invocation.getter(#currentOrgInfoController),
        ),
      ) as _i4.StreamController<_i5.OrgInfo>);
  @override
  _i5.OrgInfo get currentOrg => (super.noSuchMethod(
        Invocation.getter(#currentOrg),
        returnValue: _FakeOrgInfo_11(
          this,
          Invocation.getter(#currentOrg),
        ),
      ) as _i5.OrgInfo);
  @override
  String get currentOrgName => (super.noSuchMethod(
        Invocation.getter(#currentOrgName),
        returnValue: '',
      ) as String);
  @override
  set currentOrg(_i5.OrgInfo? org) => super.noSuchMethod(
        Invocation.setter(
          #currentOrg,
          org,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i6.User get currentUser => (super.noSuchMethod(
        Invocation.getter(#currentUser),
        returnValue: _FakeUser_12(
          this,
          Invocation.getter(#currentUser),
        ),
      ) as _i6.User);
  @override
  set currentUser(_i6.User? user) => super.noSuchMethod(
        Invocation.setter(
          #currentUser,
          user,
        ),
        returnValueForMissingStub: null,
      );
  @override
  void initialiseStream() => super.noSuchMethod(
        Invocation.method(
          #initialiseStream,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.Future<bool> userLoggedIn() => (super.noSuchMethod(
        Invocation.method(
          #userLoggedIn,
          [],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
  @override
  _i4.Future<dynamic> updateUserJoinedOrg(List<_i5.OrgInfo>? orgDetails) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUserJoinedOrg,
          [orgDetails],
        ),
        returnValue: _i4.Future<dynamic>.value(),
      ) as _i4.Future<dynamic>);
  @override
  _i4.Future<dynamic> updateUserCreatedOrg(List<_i5.OrgInfo>? orgDetails) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUserCreatedOrg,
          [orgDetails],
        ),
        returnValue: _i4.Future<dynamic>.value(),
      ) as _i4.Future<dynamic>);
  @override
  _i4.Future<dynamic> updateUserMemberRequestOrg(
          List<_i5.OrgInfo>? orgDetails) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUserMemberRequestOrg,
          [orgDetails],
        ),
        returnValue: _i4.Future<dynamic>.value(),
      ) as _i4.Future<dynamic>);
  @override
  _i4.Future<dynamic> updateUserAdminOrg(List<_i5.OrgInfo>? orgDetails) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUserAdminOrg,
          [orgDetails],
        ),
        returnValue: _i4.Future<dynamic>.value(),
      ) as _i4.Future<dynamic>);
  @override
  _i4.Future<dynamic> updateAccessToken({
    required String? accessToken,
    required String? refreshToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateAccessToken,
          [],
          {
            #accessToken: accessToken,
            #refreshToken: refreshToken,
          },
        ),
        returnValue: _i4.Future<dynamic>.value(),
      ) as _i4.Future<dynamic>);
  @override
  _i4.Future<bool> updateUser(_i6.User? updatedUserDetails) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUser,
          [updatedUserDetails],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
  @override
  dynamic saveCurrentOrgInHive(_i5.OrgInfo? saveOrgAsCurrent) =>
      super.noSuchMethod(Invocation.method(
        #saveCurrentOrgInHive,
        [saveOrgAsCurrent],
      ));
}

/// A class which mocks [AppLanguage].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppLanguage extends _i2.Mock implements _i21.AppLanguage {
  @override
  bool get isTest => (super.noSuchMethod(
        Invocation.getter(#isTest),
        returnValue: false,
      ) as bool);
  @override
  _i7.NavigationService get navigationService => (super.noSuchMethod(
        Invocation.getter(#navigationService),
        returnValue: _FakeNavigationService_13(
          this,
          Invocation.getter(#navigationService),
        ),
      ) as _i7.NavigationService);
  @override
  _i8.DataBaseMutationFunctions get databaseFunctions => (super.noSuchMethod(
        Invocation.getter(#databaseFunctions),
        returnValue: _FakeDataBaseMutationFunctions_14(
          this,
          Invocation.getter(#databaseFunctions),
        ),
      ) as _i8.DataBaseMutationFunctions);
  @override
  _i22.ViewState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _i22.ViewState.idle,
      ) as _i22.ViewState);
  @override
  bool get isBusy => (super.noSuchMethod(
        Invocation.getter(#isBusy),
        returnValue: false,
      ) as bool);
  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);
  @override
  _i4.Future<void> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<void> fetchLocale() => (super.noSuchMethod(
        Invocation.method(
          #fetchLocale,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<void> changeLanguage(dynamic type) => (super.noSuchMethod(
        Invocation.method(
          #changeLanguage,
          [type],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<void> dbLanguageUpdate() => (super.noSuchMethod(
        Invocation.method(
          #dbLanguageUpdate,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<void> appLanguageQuery() => (super.noSuchMethod(
        Invocation.method(
          #appLanguageQuery,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<void> userLanguageQuery(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #userLanguageQuery,
          [userId],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  void setState(_i22.ViewState? viewState) => super.noSuchMethod(
        Invocation.method(
          #setState,
          [viewState],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addListener(dynamic listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(dynamic listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [Connectivity].
///
/// See the documentation for Mockito's code generation for more information.
class MockConnectivity extends _i2.Mock implements _i23.Connectivity {
  @override
  _i4.Stream<_i24.ConnectivityResult> get onConnectivityChanged =>
      (super.noSuchMethod(
        Invocation.getter(#onConnectivityChanged),
        returnValue: _i4.Stream<_i24.ConnectivityResult>.empty(),
      ) as _i4.Stream<_i24.ConnectivityResult>);
  @override
  _i4.Future<_i24.ConnectivityResult> checkConnectivity() =>
      (super.noSuchMethod(
        Invocation.method(
          #checkConnectivity,
          [],
        ),
        returnValue: _i4.Future<_i24.ConnectivityResult>.value(
            _i24.ConnectivityResult.bluetooth),
      ) as _i4.Future<_i24.ConnectivityResult>);
}

/// A class which mocks [SignupDetailsViewModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockSignupDetailsViewModel extends _i2.Mock
    implements _i25.SignupDetailsViewModel {
  @override
  _i1.GlobalKey<_i1.FormState> get formKey => (super.noSuchMethod(
        Invocation.getter(#formKey),
        returnValue: _FakeGlobalKey_0<_i1.FormState>(
          this,
          Invocation.getter(#formKey),
        ),
      ) as _i1.GlobalKey<_i1.FormState>);
  @override
  List<Map<String, dynamic>> get greeting => (super.noSuchMethod(
        Invocation.getter(#greeting),
        returnValue: <Map<String, dynamic>>[],
      ) as List<Map<String, dynamic>>);
  @override
  set greeting(List<Map<String, dynamic>>? _greeting) => super.noSuchMethod(
        Invocation.setter(
          #greeting,
          _greeting,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.OrgInfo get selectedOrganization => (super.noSuchMethod(
        Invocation.getter(#selectedOrganization),
        returnValue: _FakeOrgInfo_11(
          this,
          Invocation.getter(#selectedOrganization),
        ),
      ) as _i5.OrgInfo);
  @override
  set selectedOrganization(_i5.OrgInfo? _selectedOrganization) =>
      super.noSuchMethod(
        Invocation.setter(
          #selectedOrganization,
          _selectedOrganization,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i1.TextEditingController get confirmPassword => (super.noSuchMethod(
        Invocation.getter(#confirmPassword),
        returnValue: _FakeTextEditingController_15(
          this,
          Invocation.getter(#confirmPassword),
        ),
      ) as _i1.TextEditingController);
  @override
  set confirmPassword(_i1.TextEditingController? _confirmPassword) =>
      super.noSuchMethod(
        Invocation.setter(
          #confirmPassword,
          _confirmPassword,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i1.TextEditingController get firstName => (super.noSuchMethod(
        Invocation.getter(#firstName),
        returnValue: _FakeTextEditingController_15(
          this,
          Invocation.getter(#firstName),
        ),
      ) as _i1.TextEditingController);
  @override
  set firstName(_i1.TextEditingController? _firstName) => super.noSuchMethod(
        Invocation.setter(
          #firstName,
          _firstName,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i1.TextEditingController get lastName => (super.noSuchMethod(
        Invocation.getter(#lastName),
        returnValue: _FakeTextEditingController_15(
          this,
          Invocation.getter(#lastName),
        ),
      ) as _i1.TextEditingController);
  @override
  set lastName(_i1.TextEditingController? _lastName) => super.noSuchMethod(
        Invocation.setter(
          #lastName,
          _lastName,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i1.TextEditingController get password => (super.noSuchMethod(
        Invocation.getter(#password),
        returnValue: _FakeTextEditingController_15(
          this,
          Invocation.getter(#password),
        ),
      ) as _i1.TextEditingController);
  @override
  set password(_i1.TextEditingController? _password) => super.noSuchMethod(
        Invocation.setter(
          #password,
          _password,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i1.TextEditingController get email => (super.noSuchMethod(
        Invocation.getter(#email),
        returnValue: _FakeTextEditingController_15(
          this,
          Invocation.getter(#email),
        ),
      ) as _i1.TextEditingController);
  @override
  set email(_i1.TextEditingController? _email) => super.noSuchMethod(
        Invocation.setter(
          #email,
          _email,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i1.AutovalidateMode get validate => (super.noSuchMethod(
        Invocation.getter(#validate),
        returnValue: _i1.AutovalidateMode.disabled,
      ) as _i1.AutovalidateMode);
  @override
  set validate(_i1.AutovalidateMode? _validate) => super.noSuchMethod(
        Invocation.setter(
          #validate,
          _validate,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i1.FocusNode get confirmFocus => (super.noSuchMethod(
        Invocation.getter(#confirmFocus),
        returnValue: _FakeFocusNode_16(
          this,
          Invocation.getter(#confirmFocus),
        ),
      ) as _i1.FocusNode);
  @override
  set confirmFocus(_i1.FocusNode? _confirmFocus) => super.noSuchMethod(
        Invocation.setter(
          #confirmFocus,
          _confirmFocus,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get hidePassword => (super.noSuchMethod(
        Invocation.getter(#hidePassword),
        returnValue: false,
      ) as bool);
  @override
  set hidePassword(bool? _hidePassword) => super.noSuchMethod(
        Invocation.setter(
          #hidePassword,
          _hidePassword,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i22.ViewState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _i22.ViewState.idle,
      ) as _i22.ViewState);
  @override
  bool get isBusy => (super.noSuchMethod(
        Invocation.getter(#isBusy),
        returnValue: false,
      ) as bool);
  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);
  @override
  dynamic initialise(_i5.OrgInfo? org) => super.noSuchMethod(Invocation.method(
        #initialise,
        [org],
      ));
  @override
  void setState(_i22.ViewState? viewState) => super.noSuchMethod(
        Invocation.method(
          #setState,
          [viewState],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addListener(dynamic listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(dynamic listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [Post].
///
/// See the documentation for Mockito's code generation for more information.
class MockPost extends _i2.Mock implements _i13.Post {
  @override
  String get sId => (super.noSuchMethod(
        Invocation.getter(#sId),
        returnValue: '',
      ) as String);
  @override
  set sId(String? _sId) => super.noSuchMethod(
        Invocation.setter(
          #sId,
          _sId,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set description(String? _description) => super.noSuchMethod(
        Invocation.setter(
          #description,
          _description,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set createdAt(DateTime? _createdAt) => super.noSuchMethod(
        Invocation.setter(
          #createdAt,
          _createdAt,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set imageUrl(String? _imageUrl) => super.noSuchMethod(
        Invocation.setter(
          #imageUrl,
          _imageUrl,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set videoUrl(String? _videoUrl) => super.noSuchMethod(
        Invocation.setter(
          #videoUrl,
          _videoUrl,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set creator(_i6.User? _creator) => super.noSuchMethod(
        Invocation.setter(
          #creator,
          _creator,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set organization(_i5.OrgInfo? _organization) => super.noSuchMethod(
        Invocation.setter(
          #organization,
          _organization,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set likedBy(List<_i13.LikedBy>? _likedBy) => super.noSuchMethod(
        Invocation.setter(
          #likedBy,
          _likedBy,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set comments(List<_i13.Comments>? _comments) => super.noSuchMethod(
        Invocation.setter(
          #comments,
          _comments,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String getPostCreatedDuration() => (super.noSuchMethod(
        Invocation.method(
          #getPostCreatedDuration,
          [],
        ),
        returnValue: '',
      ) as String);
}

/// A class which mocks [DataBaseMutationFunctions].
///
/// See the documentation for Mockito's code generation for more information.
class MockDataBaseMutationFunctions extends _i2.Mock
    implements _i8.DataBaseMutationFunctions {
  @override
  _i3.GraphQLClient get clientNonAuth => (super.noSuchMethod(
        Invocation.getter(#clientNonAuth),
        returnValue: _FakeGraphQLClient_3(
          this,
          Invocation.getter(#clientNonAuth),
        ),
      ) as _i3.GraphQLClient);
  @override
  set clientNonAuth(_i3.GraphQLClient? _clientNonAuth) => super.noSuchMethod(
        Invocation.setter(
          #clientNonAuth,
          _clientNonAuth,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i3.GraphQLClient get clientAuth => (super.noSuchMethod(
        Invocation.getter(#clientAuth),
        returnValue: _FakeGraphQLClient_3(
          this,
          Invocation.getter(#clientAuth),
        ),
      ) as _i3.GraphQLClient);
  @override
  set clientAuth(_i3.GraphQLClient? _clientAuth) => super.noSuchMethod(
        Invocation.setter(
          #clientAuth,
          _clientAuth,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i3.GraphQLError get userNotFound => (super.noSuchMethod(
        Invocation.getter(#userNotFound),
        returnValue: _FakeGraphQLError_17(
          this,
          Invocation.getter(#userNotFound),
        ),
      ) as _i3.GraphQLError);
  @override
  set userNotFound(_i3.GraphQLError? _userNotFound) => super.noSuchMethod(
        Invocation.setter(
          #userNotFound,
          _userNotFound,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i3.GraphQLError get userNotAuthenticated => (super.noSuchMethod(
        Invocation.getter(#userNotAuthenticated),
        returnValue: _FakeGraphQLError_17(
          this,
          Invocation.getter(#userNotAuthenticated),
        ),
      ) as _i3.GraphQLError);
  @override
  set userNotAuthenticated(_i3.GraphQLError? _userNotAuthenticated) =>
      super.noSuchMethod(
        Invocation.setter(
          #userNotAuthenticated,
          _userNotAuthenticated,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i3.GraphQLError get emailAccountPresent => (super.noSuchMethod(
        Invocation.getter(#emailAccountPresent),
        returnValue: _FakeGraphQLError_17(
          this,
          Invocation.getter(#emailAccountPresent),
        ),
      ) as _i3.GraphQLError);
  @override
  set emailAccountPresent(_i3.GraphQLError? _emailAccountPresent) =>
      super.noSuchMethod(
        Invocation.setter(
          #emailAccountPresent,
          _emailAccountPresent,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i3.GraphQLError get wrongCredentials => (super.noSuchMethod(
        Invocation.getter(#wrongCredentials),
        returnValue: _FakeGraphQLError_17(
          this,
          Invocation.getter(#wrongCredentials),
        ),
      ) as _i3.GraphQLError);
  @override
  set wrongCredentials(_i3.GraphQLError? _wrongCredentials) =>
      super.noSuchMethod(
        Invocation.setter(
          #wrongCredentials,
          _wrongCredentials,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i3.GraphQLError get organizationNotFound => (super.noSuchMethod(
        Invocation.getter(#organizationNotFound),
        returnValue: _FakeGraphQLError_17(
          this,
          Invocation.getter(#organizationNotFound),
        ),
      ) as _i3.GraphQLError);
  @override
  set organizationNotFound(_i3.GraphQLError? _organizationNotFound) =>
      super.noSuchMethod(
        Invocation.setter(
          #organizationNotFound,
          _organizationNotFound,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i3.GraphQLError get refreshAccessTokenExpiredException =>
      (super.noSuchMethod(
        Invocation.getter(#refreshAccessTokenExpiredException),
        returnValue: _FakeGraphQLError_17(
          this,
          Invocation.getter(#refreshAccessTokenExpiredException),
        ),
      ) as _i3.GraphQLError);
  @override
  set refreshAccessTokenExpiredException(
          _i3.GraphQLError? _refreshAccessTokenExpiredException) =>
      super.noSuchMethod(
        Invocation.setter(
          #refreshAccessTokenExpiredException,
          _refreshAccessTokenExpiredException,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i3.GraphQLError get memberRequestExist => (super.noSuchMethod(
        Invocation.getter(#memberRequestExist),
        returnValue: _FakeGraphQLError_17(
          this,
          Invocation.getter(#memberRequestExist),
        ),
      ) as _i3.GraphQLError);
  @override
  set memberRequestExist(_i3.GraphQLError? _memberRequestExist) =>
      super.noSuchMethod(
        Invocation.setter(
          #memberRequestExist,
          _memberRequestExist,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool? encounteredExceptionOrError(
    _i3.OperationException? exception, {
    bool? showSnackBar = true,
  }) =>
      (super.noSuchMethod(Invocation.method(
        #encounteredExceptionOrError,
        [exception],
        {#showSnackBar: showSnackBar},
      )) as bool?);
  @override
  _i4.Future<dynamic> gqlAuthQuery(
    String? query, {
    Map<String, dynamic>? variables,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #gqlAuthQuery,
          [query],
          {#variables: variables},
        ),
        returnValue: _i4.Future<dynamic>.value(),
      ) as _i4.Future<dynamic>);
  @override
  _i4.Future<dynamic> gqlAuthMutation(
    String? mutation, {
    Map<String, dynamic>? variables,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #gqlAuthMutation,
          [mutation],
          {#variables: variables},
        ),
        returnValue: _i4.Future<dynamic>.value(),
      ) as _i4.Future<dynamic>);
  @override
  _i4.Future<dynamic> gqlNonAuthMutation(
    String? mutation, {
    Map<String, dynamic>? variables,
    bool? reCall = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #gqlNonAuthMutation,
          [mutation],
          {
            #variables: variables,
            #reCall: reCall,
          },
        ),
        returnValue: _i4.Future<dynamic>.value(),
      ) as _i4.Future<dynamic>);
  @override
  _i4.Future<_i3.QueryResult<Object?>?> gqlNonAuthQuery(
    String? query, {
    Map<String, dynamic>? variables,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #gqlNonAuthQuery,
          [query],
          {#variables: variables},
        ),
        returnValue: _i4.Future<_i3.QueryResult<Object?>?>.value(),
      ) as _i4.Future<_i3.QueryResult<Object?>?>);
  @override
  _i4.Future<bool> refreshAccessToken(String? refreshToken) =>
      (super.noSuchMethod(
        Invocation.method(
          #refreshAccessToken,
          [refreshToken],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
  @override
  _i4.Future<dynamic> fetchOrgById(String? id) => (super.noSuchMethod(
        Invocation.method(
          #fetchOrgById,
          [id],
        ),
        returnValue: _i4.Future<dynamic>.value(),
      ) as _i4.Future<dynamic>);
}

/// A class which mocks [OrganizationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockOrganizationService extends _i2.Mock
    implements _i26.OrganizationService {
  @override
  _i4.Future<List<_i6.User>> getOrgMembersList(String? orgId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getOrgMembersList,
          [orgId],
        ),
        returnValue: _i4.Future<List<_i6.User>>.value(<_i6.User>[]),
      ) as _i4.Future<List<_i6.User>>);
}

/// A class which mocks [ExploreEventsViewModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockExploreEventsViewModel extends _i2.Mock
    implements _i27.ExploreEventsViewModel {
  @override
  List<_i16.Event> get events => (super.noSuchMethod(
        Invocation.getter(#events),
        returnValue: <_i16.Event>[],
      ) as List<_i16.Event>);
  @override
  _i9.EventService get eventService => (super.noSuchMethod(
        Invocation.getter(#eventService),
        returnValue: _FakeEventService_18(
          this,
          Invocation.getter(#eventService),
        ),
      ) as _i9.EventService);
  @override
  String get emptyListMessage => (super.noSuchMethod(
        Invocation.getter(#emptyListMessage),
        returnValue: '',
      ) as String);
  @override
  String get chosenValue => (super.noSuchMethod(
        Invocation.getter(#chosenValue),
        returnValue: '',
      ) as String);
  @override
  _i22.ViewState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _i22.ViewState.idle,
      ) as _i22.ViewState);
  @override
  bool get isBusy => (super.noSuchMethod(
        Invocation.getter(#isBusy),
        returnValue: false,
      ) as bool);
  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);
  @override
  _i4.Future<void> fetchNewEvents() => (super.noSuchMethod(
        Invocation.method(
          #fetchNewEvents,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<void> refreshEvents() => (super.noSuchMethod(
        Invocation.method(
          #refreshEvents,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<void> initialise() => (super.noSuchMethod(
        Invocation.method(
          #initialise,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<void> checkIfExistsAndAddNewEvent(_i16.Event? newEvent) =>
      (super.noSuchMethod(
        Invocation.method(
          #checkIfExistsAndAddNewEvent,
          [newEvent],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<void> deleteEvent({required String? eventId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteEvent,
          [],
          {#eventId: eventId},
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  dynamic choseValueFromDropdown(String? value) =>
      super.noSuchMethod(Invocation.method(
        #choseValueFromDropdown,
        [value],
      ));
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setState(_i22.ViewState? viewState) => super.noSuchMethod(
        Invocation.method(
          #setState,
          [viewState],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addListener(dynamic listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(dynamic listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [Validator].
///
/// See the documentation for Mockito's code generation for more information.
class MockValidator extends _i2.Mock implements _i28.Validator {
  @override
  _i4.Future<bool?> validateUrlExistence(String? url) => (super.noSuchMethod(
        Invocation.method(
          #validateUrlExistence,
          [url],
        ),
        returnValue: _i4.Future<bool?>.value(),
      ) as _i4.Future<bool?>);
}

/// A class which mocks [QRViewController].
///
/// See the documentation for Mockito's code generation for more information.
class MockQRViewController extends _i2.Mock implements _i29.QRViewController {
  @override
  _i4.Stream<_i30.Barcode> get scannedDataStream => (super.noSuchMethod(
        Invocation.getter(#scannedDataStream),
        returnValue: _i4.Stream<_i30.Barcode>.empty(),
      ) as _i4.Stream<_i30.Barcode>);
  @override
  bool get hasPermissions => (super.noSuchMethod(
        Invocation.getter(#hasPermissions),
        returnValue: false,
      ) as bool);
  @override
  _i4.Future<_i31.CameraFacing> getCameraInfo() => (super.noSuchMethod(
        Invocation.method(
          #getCameraInfo,
          [],
        ),
        returnValue:
            _i4.Future<_i31.CameraFacing>.value(_i31.CameraFacing.back),
      ) as _i4.Future<_i31.CameraFacing>);
  @override
  _i4.Future<_i31.CameraFacing> flipCamera() => (super.noSuchMethod(
        Invocation.method(
          #flipCamera,
          [],
        ),
        returnValue:
            _i4.Future<_i31.CameraFacing>.value(_i31.CameraFacing.back),
      ) as _i4.Future<_i31.CameraFacing>);
  @override
  _i4.Future<bool?> getFlashStatus() => (super.noSuchMethod(
        Invocation.method(
          #getFlashStatus,
          [],
        ),
        returnValue: _i4.Future<bool?>.value(),
      ) as _i4.Future<bool?>);
  @override
  _i4.Future<void> toggleFlash() => (super.noSuchMethod(
        Invocation.method(
          #toggleFlash,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<void> pauseCamera() => (super.noSuchMethod(
        Invocation.method(
          #pauseCamera,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<void> stopCamera() => (super.noSuchMethod(
        Invocation.method(
          #stopCamera,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<void> resumeCamera() => (super.noSuchMethod(
        Invocation.method(
          #resumeCamera,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<_i10.SystemFeatures> getSystemFeatures() => (super.noSuchMethod(
        Invocation.method(
          #getSystemFeatures,
          [],
        ),
        returnValue:
            _i4.Future<_i10.SystemFeatures>.value(_FakeSystemFeatures_19(
          this,
          Invocation.method(
            #getSystemFeatures,
            [],
          ),
        )),
      ) as _i4.Future<_i10.SystemFeatures>);
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.Future<void> scanInvert(bool? isScanInvert) => (super.noSuchMethod(
        Invocation.method(
          #scanInvert,
          [isScanInvert],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}

/// A class which mocks [CommentService].
///
/// See the documentation for Mockito's code generation for more information.
class MockCommentService extends _i2.Mock implements _i32.CommentService {
  @override
  _i4.Future<void> createComments(
    String? postId,
    String? text,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #createComments,
          [
            postId,
            text,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<dynamic> getCommentsForPost(String? postId) => (super.noSuchMethod(
        Invocation.method(
          #getCommentsForPost,
          [postId],
        ),
        returnValue: _i4.Future<dynamic>.value(),
      ) as _i4.Future<dynamic>);
}

/// A class which mocks [AppTheme].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppTheme extends _i2.Mock implements _i33.AppTheme {
  @override
  String get key => (super.noSuchMethod(
        Invocation.getter(#key),
        returnValue: '',
      ) as String);
  @override
  bool get isdarkTheme => (super.noSuchMethod(
        Invocation.getter(#isdarkTheme),
        returnValue: false,
      ) as bool);
  @override
  _i22.ViewState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _i22.ViewState.idle,
      ) as _i22.ViewState);
  @override
  bool get isBusy => (super.noSuchMethod(
        Invocation.getter(#isBusy),
        returnValue: false,
      ) as bool);
  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);
  @override
  dynamic switchTheme({required bool? isOn}) =>
      super.noSuchMethod(Invocation.method(
        #switchTheme,
        [],
        {#isOn: isOn},
      ));
  @override
  void setState(_i22.ViewState? viewState) => super.noSuchMethod(
        Invocation.method(
          #setState,
          [viewState],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addListener(dynamic listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(dynamic listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [TaskService].
///
/// See the documentation for Mockito's code generation for more information.
class MockTaskService extends _i2.Mock implements _i34.TaskService {
  MockTaskService() {
    _i2.throwOnMissingStub(this);
  }

  @override
  set callbackNotifyListeners(dynamic _callbackNotifyListeners) =>
      super.noSuchMethod(
        Invocation.setter(
          #callbackNotifyListeners,
          _callbackNotifyListeners,
        ),
        returnValueForMissingStub: null,
      );
  @override
  List<_i35.Task> get tasks => (super.noSuchMethod(
        Invocation.getter(#tasks),
        returnValue: <_i35.Task>[],
      ) as List<_i35.Task>);
  @override
  _i4.Future<void> getTasksForEvent(String? eventId) => (super.noSuchMethod(
        Invocation.method(
          #getTasksForEvent,
          [eventId],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<void> getTasksByUser() => (super.noSuchMethod(
        Invocation.method(
          #getTasksByUser,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<bool> editTask({
    required String? title,
    required String? description,
    required String? deadline,
    required String? taskId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #editTask,
          [],
          {
            #title: title,
            #description: description,
            #deadline: deadline,
            #taskId: taskId,
          },
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
  @override
  _i4.Future<bool> createTask({
    required String? title,
    required String? description,
    required String? deadline,
    required String? eventId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createTask,
          [],
          {
            #title: title,
            #description: description,
            #deadline: deadline,
            #eventId: eventId,
          },
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
  @override
  _i4.Future<void> deleteTask(
    String? taskId,
    String? creatorId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteTask,
          [
            taskId,
            creatorId,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}

/// A class which mocks [CreateEventViewModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockCreateEventViewModel extends _i2.Mock
    implements _i36.CreateEventViewModel {
  @override
  _i1.TextEditingController get eventTitleTextController => (super.noSuchMethod(
        Invocation.getter(#eventTitleTextController),
        returnValue: _FakeTextEditingController_15(
          this,
          Invocation.getter(#eventTitleTextController),
        ),
      ) as _i1.TextEditingController);
  @override
  set eventTitleTextController(
          _i1.TextEditingController? _eventTitleTextController) =>
      super.noSuchMethod(
        Invocation.setter(
          #eventTitleTextController,
          _eventTitleTextController,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i1.TextEditingController get eventLocationTextController =>
      (super.noSuchMethod(
        Invocation.getter(#eventLocationTextController),
        returnValue: _FakeTextEditingController_15(
          this,
          Invocation.getter(#eventLocationTextController),
        ),
      ) as _i1.TextEditingController);
  @override
  set eventLocationTextController(
          _i1.TextEditingController? _eventLocationTextController) =>
      super.noSuchMethod(
        Invocation.setter(
          #eventLocationTextController,
          _eventLocationTextController,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i1.TextEditingController get eventDescriptionTextController =>
      (super.noSuchMethod(
        Invocation.getter(#eventDescriptionTextController),
        returnValue: _FakeTextEditingController_15(
          this,
          Invocation.getter(#eventDescriptionTextController),
        ),
      ) as _i1.TextEditingController);
  @override
  set eventDescriptionTextController(
          _i1.TextEditingController? _eventDescriptionTextController) =>
      super.noSuchMethod(
        Invocation.setter(
          #eventDescriptionTextController,
          _eventDescriptionTextController,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i1.TimeOfDay get eventStartTime => (super.noSuchMethod(
        Invocation.getter(#eventStartTime),
        returnValue: _FakeTimeOfDay_20(
          this,
          Invocation.getter(#eventStartTime),
        ),
      ) as _i1.TimeOfDay);
  @override
  set eventStartTime(_i1.TimeOfDay? _eventStartTime) => super.noSuchMethod(
        Invocation.setter(
          #eventStartTime,
          _eventStartTime,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i1.TimeOfDay get eventEndTime => (super.noSuchMethod(
        Invocation.getter(#eventEndTime),
        returnValue: _FakeTimeOfDay_20(
          this,
          Invocation.getter(#eventEndTime),
        ),
      ) as _i1.TimeOfDay);
  @override
  set eventEndTime(_i1.TimeOfDay? _eventEndTime) => super.noSuchMethod(
        Invocation.setter(
          #eventEndTime,
          _eventEndTime,
        ),
        returnValueForMissingStub: null,
      );
  @override
  DateTime get eventStartDate => (super.noSuchMethod(
        Invocation.getter(#eventStartDate),
        returnValue: _FakeDateTime_21(
          this,
          Invocation.getter(#eventStartDate),
        ),
      ) as DateTime);
  @override
  set eventStartDate(DateTime? _eventStartDate) => super.noSuchMethod(
        Invocation.setter(
          #eventStartDate,
          _eventStartDate,
        ),
        returnValueForMissingStub: null,
      );
  @override
  DateTime get eventEndDate => (super.noSuchMethod(
        Invocation.getter(#eventEndDate),
        returnValue: _FakeDateTime_21(
          this,
          Invocation.getter(#eventEndDate),
        ),
      ) as DateTime);
  @override
  set eventEndDate(DateTime? _eventEndDate) => super.noSuchMethod(
        Invocation.setter(
          #eventEndDate,
          _eventEndDate,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get isPublicSwitch => (super.noSuchMethod(
        Invocation.getter(#isPublicSwitch),
        returnValue: false,
      ) as bool);
  @override
  set isPublicSwitch(bool? _isPublicSwitch) => super.noSuchMethod(
        Invocation.setter(
          #isPublicSwitch,
          _isPublicSwitch,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get isRegisterableSwitch => (super.noSuchMethod(
        Invocation.getter(#isRegisterableSwitch),
        returnValue: false,
      ) as bool);
  @override
  set isRegisterableSwitch(bool? _isRegisterableSwitch) => super.noSuchMethod(
        Invocation.setter(
          #isRegisterableSwitch,
          _isRegisterableSwitch,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i1.FocusNode get titleFocus => (super.noSuchMethod(
        Invocation.getter(#titleFocus),
        returnValue: _FakeFocusNode_16(
          this,
          Invocation.getter(#titleFocus),
        ),
      ) as _i1.FocusNode);
  @override
  set titleFocus(_i1.FocusNode? _titleFocus) => super.noSuchMethod(
        Invocation.setter(
          #titleFocus,
          _titleFocus,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i1.FocusNode get locationFocus => (super.noSuchMethod(
        Invocation.getter(#locationFocus),
        returnValue: _FakeFocusNode_16(
          this,
          Invocation.getter(#locationFocus),
        ),
      ) as _i1.FocusNode);
  @override
  set locationFocus(_i1.FocusNode? _locationFocus) => super.noSuchMethod(
        Invocation.setter(
          #locationFocus,
          _locationFocus,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i1.FocusNode get descriptionFocus => (super.noSuchMethod(
        Invocation.getter(#descriptionFocus),
        returnValue: _FakeFocusNode_16(
          this,
          Invocation.getter(#descriptionFocus),
        ),
      ) as _i1.FocusNode);
  @override
  set descriptionFocus(_i1.FocusNode? _descriptionFocus) => super.noSuchMethod(
        Invocation.setter(
          #descriptionFocus,
          _descriptionFocus,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set latitude(double? _latitude) => super.noSuchMethod(
        Invocation.setter(
          #latitude,
          _latitude,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set longitude(double? _longitude) => super.noSuchMethod(
        Invocation.setter(
          #longitude,
          _longitude,
        ),
        returnValueForMissingStub: null,
      );
  @override
  List<_i6.User> get orgMembersList => (super.noSuchMethod(
        Invocation.getter(#orgMembersList),
        returnValue: <_i6.User>[],
      ) as List<_i6.User>);
  @override
  set orgMembersList(List<_i6.User>? _orgMembersList) => super.noSuchMethod(
        Invocation.setter(
          #orgMembersList,
          _orgMembersList,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i1.GlobalKey<_i1.FormState> get formKey => (super.noSuchMethod(
        Invocation.getter(#formKey),
        returnValue: _FakeGlobalKey_0<_i1.FormState>(
          this,
          Invocation.getter(#formKey),
        ),
      ) as _i1.GlobalKey<_i1.FormState>);
  @override
  _i1.AutovalidateMode get validate => (super.noSuchMethod(
        Invocation.getter(#validate),
        returnValue: _i1.AutovalidateMode.disabled,
      ) as _i1.AutovalidateMode);
  @override
  set validate(_i1.AutovalidateMode? _validate) => super.noSuchMethod(
        Invocation.setter(
          #validate,
          _validate,
        ),
        returnValueForMissingStub: null,
      );
  @override
  List<_i6.User> get selectedAdmins => (super.noSuchMethod(
        Invocation.getter(#selectedAdmins),
        returnValue: <_i6.User>[],
      ) as List<_i6.User>);
  @override
  List<_i6.User> get selectedMembers => (super.noSuchMethod(
        Invocation.getter(#selectedMembers),
        returnValue: <_i6.User>[],
      ) as List<_i6.User>);
  @override
  Map<String, bool> get adminCheckedMap => (super.noSuchMethod(
        Invocation.getter(#adminCheckedMap),
        returnValue: <String, bool>{},
      ) as Map<String, bool>);
  @override
  Map<String, bool> get memberCheckedMap => (super.noSuchMethod(
        Invocation.getter(#memberCheckedMap),
        returnValue: <String, bool>{},
      ) as Map<String, bool>);
  @override
  _i22.ViewState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _i22.ViewState.idle,
      ) as _i22.ViewState);
  @override
  bool get isBusy => (super.noSuchMethod(
        Invocation.getter(#isBusy),
        returnValue: false,
      ) as bool);
  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);
  @override
  _i4.Future<void> createEvent() => (super.noSuchMethod(
        Invocation.method(
          #createEvent,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<void> getImageFromGallery({bool? camera = false}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getImageFromGallery,
          [],
          {#camera: camera},
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  void removeImage() => super.noSuchMethod(
        Invocation.method(
          #removeImage,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.Future<List<_i6.User>> getCurrentOrgUsersList({required bool? isAdmin}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCurrentOrgUsersList,
          [],
          {#isAdmin: isAdmin},
        ),
        returnValue: _i4.Future<List<_i6.User>>.value(<_i6.User>[]),
      ) as _i4.Future<List<_i6.User>>);
  @override
  void buildUserList({required bool? isAdmin}) => super.noSuchMethod(
        Invocation.method(
          #buildUserList,
          [],
          {#isAdmin: isAdmin},
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeUserFromList({
    required bool? isAdmin,
    required String? userId,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #removeUserFromList,
          [],
          {
            #isAdmin: isAdmin,
            #userId: userId,
          },
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setState(_i22.ViewState? viewState) => super.noSuchMethod(
        Invocation.method(
          #setState,
          [viewState],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addListener(dynamic listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(dynamic listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
