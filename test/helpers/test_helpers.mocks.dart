// Mocks generated by Mockito 5.4.5 from annotations
// in talawa/test/helpers/test_helpers.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;
import 'dart:io' as _i23;
import 'dart:ui' as _i11;

import 'package:flutter/material.dart' as _i1;
import 'package:flutter_secure_storage/flutter_secure_storage.dart' as _i12;
import 'package:graphql_flutter/graphql_flutter.dart' as _i3;
import 'package:image_cropper/src/cropper.dart' as _i46;
import 'package:image_cropper_platform_interface/image_cropper_platform_interface.dart'
    as _i47;
import 'package:image_picker/image_picker.dart' as _i16;
import 'package:mockito/mockito.dart' as _i2;
import 'package:mockito/src/dummies.dart' as _i21;
import 'package:qr_code_scanner_plus/src/qr_code_scanner.dart' as _i36;
import 'package:qr_code_scanner_plus/src/types/barcode.dart' as _i37;
import 'package:qr_code_scanner_plus/src/types/camera.dart' as _i38;
import 'package:qr_code_scanner_plus/src/types/features.dart' as _i14;
import 'package:talawa/enums/enums.dart' as _i17;
import 'package:talawa/models/attachments/attachment_model.dart' as _i31;
import 'package:talawa/models/chats/chat.dart' as _i27;
import 'package:talawa/models/chats/chat_list_tile_data_model.dart' as _i44;
import 'package:talawa/models/chats/chat_message.dart' as _i28;
import 'package:talawa/models/events/event_model.dart' as _i24;
import 'package:talawa/models/events/event_venue.dart' as _i42;
import 'package:talawa/models/events/event_volunteer_group.dart' as _i25;
import 'package:talawa/models/organization/org_info.dart' as _i5;
import 'package:talawa/models/page_info/page_info.dart' as _i4;
import 'package:talawa/models/post/post_model.dart' as _i20;
import 'package:talawa/models/user/user_info.dart' as _i8;
import 'package:talawa/services/chat_service.dart' as _i26;
import 'package:talawa/services/comment_service.dart' as _i39;
import 'package:talawa/services/database_mutation_functions.dart' as _i10;
import 'package:talawa/services/event_service.dart' as _i13;
import 'package:talawa/services/graphql_config.dart' as _i18;
import 'package:talawa/services/navigation_service.dart' as _i9;
import 'package:talawa/services/org_service.dart' as _i32;
import 'package:talawa/services/post_service.dart' as _i19;
import 'package:talawa/services/third_party_service/multi_media_pick_service.dart'
    as _i22;
import 'package:talawa/services/user_config.dart' as _i15;
import 'package:talawa/utils/validators.dart' as _i35;
import 'package:talawa/view_model/after_auth_view_models/chat_view_models/direct_chat_view_model.dart'
    as _i43;
import 'package:talawa/view_model/after_auth_view_models/chat_view_models/select_contact_view_model.dart'
    as _i45;
import 'package:talawa/view_model/after_auth_view_models/event_view_models/create_event_view_model.dart'
    as _i41;
import 'package:talawa/view_model/after_auth_view_models/event_view_models/explore_events_view_model.dart'
    as _i33;
import 'package:talawa/view_model/after_auth_view_models/feed_view_models/organization_feed_view_model.dart'
    as _i34;
import 'package:talawa/view_model/lang_view_model.dart' as _i29;
import 'package:talawa/view_model/pre_auth_view_models/signup_details_view_model.dart'
    as _i30;
import 'package:talawa/view_model/theme_view_model.dart' as _i40;
import 'package:talawa/widgets/custom_alert_dialog.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeGlobalKey_0<T extends _i1.State<_i1.StatefulWidget>>
    extends _i2.SmartFake implements _i1.GlobalKey<T> {
  _FakeGlobalKey_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeHttpLink_1 extends _i2.SmartFake implements _i3.HttpLink {
  _FakeHttpLink_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGraphQLClient_2 extends _i2.SmartFake implements _i3.GraphQLClient {
  _FakeGraphQLClient_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDefaultPolicies_3 extends _i2.SmartFake
    implements _i3.DefaultPolicies {
  _FakeDefaultPolicies_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLink_4 extends _i2.SmartFake implements _i3.Link {
  _FakeLink_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGraphQLCache_5 extends _i2.SmartFake implements _i3.GraphQLCache {
  _FakeGraphQLCache_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeQueryManager_6 extends _i2.SmartFake implements _i3.QueryManager {
  _FakeQueryManager_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeObservableQuery_7<TParsed1> extends _i2.SmartFake
    implements _i3.ObservableQuery<TParsed1> {
  _FakeObservableQuery_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeQueryResult_8<TParsed1 extends Object?> extends _i2.SmartFake
    implements _i3.QueryResult<TParsed1> {
  _FakeQueryResult_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePageInfo_9 extends _i2.SmartFake implements _i4.PageInfo {
  _FakePageInfo_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeOrgInfo_10 extends _i2.SmartFake implements _i5.OrgInfo {
  _FakeOrgInfo_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCustomAlertDialog_11 extends _i2.SmartFake
    implements _i6.CustomAlertDialog {
  _FakeCustomAlertDialog_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i1.DiagnosticLevel? minLevel = _i1.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeStreamController_12<T> extends _i2.SmartFake
    implements _i7.StreamController<T> {
  _FakeStreamController_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUser_13 extends _i2.SmartFake implements _i8.User {
  _FakeUser_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeNavigationService_14 extends _i2.SmartFake
    implements _i9.NavigationService {
  _FakeNavigationService_14(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDataBaseMutationFunctions_15 extends _i2.SmartFake
    implements _i10.DataBaseMutationFunctions {
  _FakeDataBaseMutationFunctions_15(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLocale_16 extends _i2.SmartFake implements _i11.Locale {
  _FakeLocale_16(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFlutterSecureStorage_17 extends _i2.SmartFake
    implements _i12.FlutterSecureStorage {
  _FakeFlutterSecureStorage_17(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTextEditingController_18 extends _i2.SmartFake
    implements _i1.TextEditingController {
  _FakeTextEditingController_18(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFocusNode_19 extends _i2.SmartFake implements _i1.FocusNode {
  _FakeFocusNode_19(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i1.DiagnosticLevel? minLevel = _i1.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeEventService_20 extends _i2.SmartFake implements _i13.EventService {
  _FakeEventService_20(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSystemFeatures_21 extends _i2.SmartFake
    implements _i14.SystemFeatures {
  _FakeSystemFeatures_21(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeThemeData_22 extends _i2.SmartFake implements _i1.ThemeData {
  _FakeThemeData_22(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i1.DiagnosticLevel? minLevel = _i1.DiagnosticLevel.info}) =>
      super.toString();
}

class _FakeTimeOfDay_23 extends _i2.SmartFake implements _i1.TimeOfDay {
  _FakeTimeOfDay_23(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDateTime_24 extends _i2.SmartFake implements DateTime {
  _FakeDateTime_24(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserConfig_25 extends _i2.SmartFake implements _i15.UserConfig {
  _FakeUserConfig_25(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLostDataResponse_26 extends _i2.SmartFake
    implements _i16.LostDataResponse {
  _FakeLostDataResponse_26(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [NavigationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockNavigationService extends _i2.Mock implements _i9.NavigationService {
  @override
  _i1.GlobalKey<_i1.NavigatorState> get navigatorKey => (super.noSuchMethod(
        Invocation.getter(#navigatorKey),
        returnValue: _FakeGlobalKey_0<_i1.NavigatorState>(
          this,
          Invocation.getter(#navigatorKey),
        ),
        returnValueForMissingStub: _FakeGlobalKey_0<_i1.NavigatorState>(
          this,
          Invocation.getter(#navigatorKey),
        ),
      ) as _i1.GlobalKey<_i1.NavigatorState>);

  @override
  set navigatorKey(_i1.GlobalKey<_i1.NavigatorState>? _navigatorKey) =>
      super.noSuchMethod(
        Invocation.setter(
          #navigatorKey,
          _navigatorKey,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Future<dynamic> pushScreen(
    String? routeName, {
    dynamic arguments,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #pushScreen,
          [routeName],
          {#arguments: arguments},
        ),
        returnValue: _i7.Future<dynamic>.value(),
        returnValueForMissingStub: _i7.Future<dynamic>.value(),
      ) as _i7.Future<dynamic>);

  @override
  _i7.Future<dynamic> popAndPushScreen(
    String? routeName, {
    dynamic arguments,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #popAndPushScreen,
          [routeName],
          {#arguments: arguments},
        ),
        returnValue: _i7.Future<dynamic>.value(),
        returnValueForMissingStub: _i7.Future<dynamic>.value(),
      ) as _i7.Future<dynamic>);

  @override
  _i7.Future<dynamic> pushReplacementScreen(
    String? routeName, {
    dynamic arguments,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #pushReplacementScreen,
          [routeName],
          {#arguments: arguments},
        ),
        returnValue: _i7.Future<dynamic>.value(),
        returnValueForMissingStub: _i7.Future<dynamic>.value(),
      ) as _i7.Future<dynamic>);

  @override
  _i7.Future<dynamic> removeAllAndPush(
    String? routeName,
    String? tillRoute, {
    dynamic arguments,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeAllAndPush,
          [
            routeName,
            tillRoute,
          ],
          {#arguments: arguments},
        ),
        returnValue: _i7.Future<dynamic>.value(),
        returnValueForMissingStub: _i7.Future<dynamic>.value(),
      ) as _i7.Future<dynamic>);

  @override
  void pushDialog(_i1.Widget? dialog) => super.noSuchMethod(
        Invocation.method(
          #pushDialog,
          [dialog],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void showSnackBar(
    String? message, {
    Duration? duration = const Duration(seconds: 2),
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #showSnackBar,
          [message],
          {#duration: duration},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void showTalawaErrorSnackBar(
    String? errorMessage,
    _i17.MessageType? messageType,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #showTalawaErrorSnackBar,
          [
            errorMessage,
            messageType,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void showTalawaErrorDialog(
    String? errorMessage,
    _i17.MessageType? messageType,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #showTalawaErrorDialog,
          [
            errorMessage,
            messageType,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void showCustomToast(String? msg) => super.noSuchMethod(
        Invocation.method(
          #showCustomToast,
          [msg],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void pop() => super.noSuchMethod(
        Invocation.method(
          #pop,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void printNavigatorState() => super.noSuchMethod(
        Invocation.method(
          #printNavigatorState,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [GraphqlConfig].
///
/// See the documentation for Mockito's code generation for more information.
class MockGraphqlConfig extends _i2.Mock implements _i18.GraphqlConfig {
  @override
  _i3.HttpLink get httpLink => (super.noSuchMethod(
        Invocation.getter(#httpLink),
        returnValue: _FakeHttpLink_1(
          this,
          Invocation.getter(#httpLink),
        ),
        returnValueForMissingStub: _FakeHttpLink_1(
          this,
          Invocation.getter(#httpLink),
        ),
      ) as _i3.HttpLink);

  @override
  set httpLink(_i3.HttpLink? _httpLink) => super.noSuchMethod(
        Invocation.setter(
          #httpLink,
          _httpLink,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set webSocketLink(_i3.WebSocketLink? _webSocketLink) => super.noSuchMethod(
        Invocation.setter(
          #webSocketLink,
          _webSocketLink,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set displayImgRoute(String? _displayImgRoute) => super.noSuchMethod(
        Invocation.setter(
          #displayImgRoute,
          _displayImgRoute,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Future<dynamic> getToken() => (super.noSuchMethod(
        Invocation.method(
          #getToken,
          [],
        ),
        returnValue: _i7.Future<dynamic>.value(),
        returnValueForMissingStub: _i7.Future<dynamic>.value(),
      ) as _i7.Future<dynamic>);

  @override
  void getOrgUrl() => super.noSuchMethod(
        Invocation.method(
          #getOrgUrl,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.GraphQLClient clientToQuery() => (super.noSuchMethod(
        Invocation.method(
          #clientToQuery,
          [],
        ),
        returnValue: _FakeGraphQLClient_2(
          this,
          Invocation.method(
            #clientToQuery,
            [],
          ),
        ),
        returnValueForMissingStub: _FakeGraphQLClient_2(
          this,
          Invocation.method(
            #clientToQuery,
            [],
          ),
        ),
      ) as _i3.GraphQLClient);

  @override
  _i3.GraphQLClient authClient() => (super.noSuchMethod(
        Invocation.method(
          #authClient,
          [],
        ),
        returnValue: _FakeGraphQLClient_2(
          this,
          Invocation.method(
            #authClient,
            [],
          ),
        ),
        returnValueForMissingStub: _FakeGraphQLClient_2(
          this,
          Invocation.method(
            #authClient,
            [],
          ),
        ),
      ) as _i3.GraphQLClient);

  @override
  void test() => super.noSuchMethod(
        Invocation.method(
          #test,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [GraphQLClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockGraphQLClient extends _i2.Mock implements _i3.GraphQLClient {
  @override
  _i3.DefaultPolicies get defaultPolicies => (super.noSuchMethod(
        Invocation.getter(#defaultPolicies),
        returnValue: _FakeDefaultPolicies_3(
          this,
          Invocation.getter(#defaultPolicies),
        ),
        returnValueForMissingStub: _FakeDefaultPolicies_3(
          this,
          Invocation.getter(#defaultPolicies),
        ),
      ) as _i3.DefaultPolicies);

  @override
  set defaultPolicies(_i3.DefaultPolicies? _defaultPolicies) =>
      super.noSuchMethod(
        Invocation.setter(
          #defaultPolicies,
          _defaultPolicies,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.Link get link => (super.noSuchMethod(
        Invocation.getter(#link),
        returnValue: _FakeLink_4(
          this,
          Invocation.getter(#link),
        ),
        returnValueForMissingStub: _FakeLink_4(
          this,
          Invocation.getter(#link),
        ),
      ) as _i3.Link);

  @override
  _i3.GraphQLCache get cache => (super.noSuchMethod(
        Invocation.getter(#cache),
        returnValue: _FakeGraphQLCache_5(
          this,
          Invocation.getter(#cache),
        ),
        returnValueForMissingStub: _FakeGraphQLCache_5(
          this,
          Invocation.getter(#cache),
        ),
      ) as _i3.GraphQLCache);

  @override
  _i3.QueryManager get queryManager => (super.noSuchMethod(
        Invocation.getter(#queryManager),
        returnValue: _FakeQueryManager_6(
          this,
          Invocation.getter(#queryManager),
        ),
        returnValueForMissingStub: _FakeQueryManager_6(
          this,
          Invocation.getter(#queryManager),
        ),
      ) as _i3.QueryManager);

  @override
  set queryManager(_i3.QueryManager? _queryManager) => super.noSuchMethod(
        Invocation.setter(
          #queryManager,
          _queryManager,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.GraphQLClient copyWith({
    _i3.Link? link,
    _i3.GraphQLCache? cache,
    _i3.DefaultPolicies? defaultPolicies,
    bool? alwaysRebroadcast,
    _i3.DeepEqualsFn? deepEquals,
    bool? deduplicatePollers = false,
    Duration? queryRequestTimeout,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #copyWith,
          [],
          {
            #link: link,
            #cache: cache,
            #defaultPolicies: defaultPolicies,
            #alwaysRebroadcast: alwaysRebroadcast,
            #deepEquals: deepEquals,
            #deduplicatePollers: deduplicatePollers,
            #queryRequestTimeout: queryRequestTimeout,
          },
        ),
        returnValue: _FakeGraphQLClient_2(
          this,
          Invocation.method(
            #copyWith,
            [],
            {
              #link: link,
              #cache: cache,
              #defaultPolicies: defaultPolicies,
              #alwaysRebroadcast: alwaysRebroadcast,
              #deepEquals: deepEquals,
              #deduplicatePollers: deduplicatePollers,
              #queryRequestTimeout: queryRequestTimeout,
            },
          ),
        ),
        returnValueForMissingStub: _FakeGraphQLClient_2(
          this,
          Invocation.method(
            #copyWith,
            [],
            {
              #link: link,
              #cache: cache,
              #defaultPolicies: defaultPolicies,
              #alwaysRebroadcast: alwaysRebroadcast,
              #deepEquals: deepEquals,
              #deduplicatePollers: deduplicatePollers,
              #queryRequestTimeout: queryRequestTimeout,
            },
          ),
        ),
      ) as _i3.GraphQLClient);

  @override
  _i3.ObservableQuery<TParsed> watchQuery<TParsed>(
          _i3.WatchQueryOptions<TParsed>? options) =>
      (super.noSuchMethod(
        Invocation.method(
          #watchQuery,
          [options],
        ),
        returnValue: _FakeObservableQuery_7<TParsed>(
          this,
          Invocation.method(
            #watchQuery,
            [options],
          ),
        ),
        returnValueForMissingStub: _FakeObservableQuery_7<TParsed>(
          this,
          Invocation.method(
            #watchQuery,
            [options],
          ),
        ),
      ) as _i3.ObservableQuery<TParsed>);

  @override
  _i3.ObservableQuery<TParsed> watchMutation<TParsed>(
          _i3.WatchQueryOptions<TParsed>? options) =>
      (super.noSuchMethod(
        Invocation.method(
          #watchMutation,
          [options],
        ),
        returnValue: _FakeObservableQuery_7<TParsed>(
          this,
          Invocation.method(
            #watchMutation,
            [options],
          ),
        ),
        returnValueForMissingStub: _FakeObservableQuery_7<TParsed>(
          this,
          Invocation.method(
            #watchMutation,
            [options],
          ),
        ),
      ) as _i3.ObservableQuery<TParsed>);

  @override
  _i7.Future<_i3.QueryResult<TParsed>> query<TParsed>(
          _i3.QueryOptions<TParsed>? options) =>
      (super.noSuchMethod(
        Invocation.method(
          #query,
          [options],
        ),
        returnValue: _i7.Future<_i3.QueryResult<TParsed>>.value(
            _FakeQueryResult_8<TParsed>(
          this,
          Invocation.method(
            #query,
            [options],
          ),
        )),
        returnValueForMissingStub: _i7.Future<_i3.QueryResult<TParsed>>.value(
            _FakeQueryResult_8<TParsed>(
          this,
          Invocation.method(
            #query,
            [options],
          ),
        )),
      ) as _i7.Future<_i3.QueryResult<TParsed>>);

  @override
  _i7.Future<_i3.QueryResult<TParsed>> mutate<TParsed>(
          _i3.MutationOptions<TParsed>? options) =>
      (super.noSuchMethod(
        Invocation.method(
          #mutate,
          [options],
        ),
        returnValue: _i7.Future<_i3.QueryResult<TParsed>>.value(
            _FakeQueryResult_8<TParsed>(
          this,
          Invocation.method(
            #mutate,
            [options],
          ),
        )),
        returnValueForMissingStub: _i7.Future<_i3.QueryResult<TParsed>>.value(
            _FakeQueryResult_8<TParsed>(
          this,
          Invocation.method(
            #mutate,
            [options],
          ),
        )),
      ) as _i7.Future<_i3.QueryResult<TParsed>>);

  @override
  _i7.Stream<_i3.QueryResult<TParsed>> subscribe<TParsed>(
          _i3.SubscriptionOptions<TParsed>? options) =>
      (super.noSuchMethod(
        Invocation.method(
          #subscribe,
          [options],
        ),
        returnValue: _i7.Stream<_i3.QueryResult<TParsed>>.empty(),
        returnValueForMissingStub: _i7.Stream<_i3.QueryResult<TParsed>>.empty(),
      ) as _i7.Stream<_i3.QueryResult<TParsed>>);

  @override
  _i7.Future<_i3.QueryResult<TParsed>> fetchMore<TParsed>(
    _i3.FetchMoreOptions? fetchMoreOptions, {
    required _i3.QueryOptions<TParsed>? originalOptions,
    required _i3.QueryResult<TParsed>? previousResult,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchMore,
          [fetchMoreOptions],
          {
            #originalOptions: originalOptions,
            #previousResult: previousResult,
          },
        ),
        returnValue: _i7.Future<_i3.QueryResult<TParsed>>.value(
            _FakeQueryResult_8<TParsed>(
          this,
          Invocation.method(
            #fetchMore,
            [fetchMoreOptions],
            {
              #originalOptions: originalOptions,
              #previousResult: previousResult,
            },
          ),
        )),
        returnValueForMissingStub: _i7.Future<_i3.QueryResult<TParsed>>.value(
            _FakeQueryResult_8<TParsed>(
          this,
          Invocation.method(
            #fetchMore,
            [fetchMoreOptions],
            {
              #originalOptions: originalOptions,
              #previousResult: previousResult,
            },
          ),
        )),
      ) as _i7.Future<_i3.QueryResult<TParsed>>);

  @override
  Map<String, dynamic>? readQuery(
    _i3.Request? request, {
    bool? optimistic = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #readQuery,
          [request],
          {#optimistic: optimistic},
        ),
        returnValueForMissingStub: null,
      ) as Map<String, dynamic>?);

  @override
  Map<String, dynamic>? readFragment(
    _i3.FragmentRequest? fragmentRequest, {
    bool? optimistic = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #readFragment,
          [fragmentRequest],
          {#optimistic: optimistic},
        ),
        returnValueForMissingStub: null,
      ) as Map<String, dynamic>?);

  @override
  void writeQuery(
    _i3.Request? request, {
    required Map<String, dynamic>? data,
    bool? broadcast = true,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #writeQuery,
          [request],
          {
            #data: data,
            #broadcast: broadcast,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  void writeFragment(
    _i3.FragmentRequest? fragmentRequest, {
    bool? broadcast = true,
    required Map<String, dynamic>? data,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #writeFragment,
          [fragmentRequest],
          {
            #broadcast: broadcast,
            #data: data,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Future<List<_i3.QueryResult<Object?>?>>? resetStore(
          {bool? refetchQueries = true}) =>
      (super.noSuchMethod(
        Invocation.method(
          #resetStore,
          [],
          {#refetchQueries: refetchQueries},
        ),
        returnValueForMissingStub: null,
      ) as _i7.Future<List<_i3.QueryResult<Object?>?>>?);
}

/// A class which mocks [PostService].
///
/// See the documentation for Mockito's code generation for more information.
class MockPostService extends _i2.Mock implements _i19.PostService {
  @override
  _i4.PageInfo get pageInfo => (super.noSuchMethod(
        Invocation.getter(#pageInfo),
        returnValue: _FakePageInfo_9(
          this,
          Invocation.getter(#pageInfo),
        ),
        returnValueForMissingStub: _FakePageInfo_9(
          this,
          Invocation.getter(#pageInfo),
        ),
      ) as _i4.PageInfo);

  @override
  set pageInfo(_i4.PageInfo? _pageInfo) => super.noSuchMethod(
        Invocation.setter(
          #pageInfo,
          _pageInfo,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set after(String? _after) => super.noSuchMethod(
        Invocation.setter(
          #after,
          _after,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set before(String? _before) => super.noSuchMethod(
        Invocation.setter(
          #before,
          _before,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set first(int? _first) => super.noSuchMethod(
        Invocation.setter(
          #first,
          _first,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set last(int? _last) => super.noSuchMethod(
        Invocation.setter(
          #last,
          _last,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Stream<List<_i20.Post>> get postStream => (super.noSuchMethod(
        Invocation.getter(#postStream),
        returnValue: _i7.Stream<List<_i20.Post>>.empty(),
        returnValueForMissingStub: _i7.Stream<List<_i20.Post>>.empty(),
      ) as _i7.Stream<List<_i20.Post>>);

  @override
  _i7.Stream<_i20.Post> get updatedPostStream => (super.noSuchMethod(
        Invocation.getter(#updatedPostStream),
        returnValue: _i7.Stream<_i20.Post>.empty(),
        returnValueForMissingStub: _i7.Stream<_i20.Post>.empty(),
      ) as _i7.Stream<_i20.Post>);

  @override
  _i5.OrgInfo get currentOrg => (super.noSuchMethod(
        Invocation.getter(#currentOrg),
        returnValue: _FakeOrgInfo_10(
          this,
          Invocation.getter(#currentOrg),
        ),
        returnValueForMissingStub: _FakeOrgInfo_10(
          this,
          Invocation.getter(#currentOrg),
        ),
      ) as _i5.OrgInfo);

  @override
  List<_i20.Post> get posts => (super.noSuchMethod(
        Invocation.getter(#posts),
        returnValue: <_i20.Post>[],
        returnValueForMissingStub: <_i20.Post>[],
      ) as List<_i20.Post>);

  @override
  String get cacheKey => (super.noSuchMethod(
        Invocation.getter(#cacheKey),
        returnValue: _i21.dummyValue<String>(
          this,
          Invocation.getter(#cacheKey),
        ),
        returnValueForMissingStub: _i21.dummyValue<String>(
          this,
          Invocation.getter(#cacheKey),
        ),
      ) as String);

  @override
  _i7.Future<List<_i20.Post>> fetchDataFromApi() => (super.noSuchMethod(
        Invocation.method(
          #fetchDataFromApi,
          [],
        ),
        returnValue: _i7.Future<List<_i20.Post>>.value(<_i20.Post>[]),
        returnValueForMissingStub:
            _i7.Future<List<_i20.Post>>.value(<_i20.Post>[]),
      ) as _i7.Future<List<_i20.Post>>);

  @override
  _i7.Future<void> fetchAndSetUserVoteStatus(_i20.Post? post) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchAndSetUserVoteStatus,
          [post],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  void setOrgStreamSubscription() => super.noSuchMethod(
        Invocation.method(
          #setOrgStreamSubscription,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Future<void> fetchPostsInitial() => (super.noSuchMethod(
        Invocation.method(
          #fetchPostsInitial,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> getPosts() => (super.noSuchMethod(
        Invocation.method(
          #getPosts,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> refreshFeed() => (super.noSuchMethod(
        Invocation.method(
          #refreshFeed,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  void addNewpost(_i20.Post? newPost) => super.noSuchMethod(
        Invocation.method(
          #addNewpost,
          [newPost],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Future<_i3.QueryResult<Object?>> deletePost(_i20.Post? post) =>
      (super.noSuchMethod(
        Invocation.method(
          #deletePost,
          [post],
        ),
        returnValue: _i7.Future<_i3.QueryResult<Object?>>.value(
            _FakeQueryResult_8<Object?>(
          this,
          Invocation.method(
            #deletePost,
            [post],
          ),
        )),
        returnValueForMissingStub: _i7.Future<_i3.QueryResult<Object?>>.value(
            _FakeQueryResult_8<Object?>(
          this,
          Invocation.method(
            #deletePost,
            [post],
          ),
        )),
      ) as _i7.Future<_i3.QueryResult<Object?>>);

  @override
  void addCommentLocally(String? postID) => super.noSuchMethod(
        Invocation.method(
          #addCommentLocally,
          [postID],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Future<void> nextPage() => (super.noSuchMethod(
        Invocation.method(
          #nextPage,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> previousPage() => (super.noSuchMethod(
        Invocation.method(
          #previousPage,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<List<_i20.Post>> loadCachedData() => (super.noSuchMethod(
        Invocation.method(
          #loadCachedData,
          [],
        ),
        returnValue: _i7.Future<List<_i20.Post>>.value(<_i20.Post>[]),
        returnValueForMissingStub:
            _i7.Future<List<_i20.Post>>.value(<_i20.Post>[]),
      ) as _i7.Future<List<_i20.Post>>);

  @override
  _i7.Future<void> saveDataToCache(List<_i20.Post>? data) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveDataToCache,
          [data],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<List<_i20.Post>> getNewFeedAndRefreshCache() =>
      (super.noSuchMethod(
        Invocation.method(
          #getNewFeedAndRefreshCache,
          [],
        ),
        returnValue: _i7.Future<List<_i20.Post>>.value(<_i20.Post>[]),
        returnValueForMissingStub:
            _i7.Future<List<_i20.Post>>.value(<_i20.Post>[]),
      ) as _i7.Future<List<_i20.Post>>);
}

/// A class which mocks [MultiMediaPickerService].
///
/// See the documentation for Mockito's code generation for more information.
class MockMultiMediaPickerService extends _i2.Mock
    implements _i22.MultiMediaPickerService {
  @override
  _i7.Stream<dynamic> get fileStream => (super.noSuchMethod(
        Invocation.getter(#fileStream),
        returnValue: _i7.Stream<dynamic>.empty(),
        returnValueForMissingStub: _i7.Stream<dynamic>.empty(),
      ) as _i7.Stream<dynamic>);

  @override
  _i7.Future<_i23.File?> getPhotoFromGallery({bool? camera = false}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPhotoFromGallery,
          [],
          {#camera: camera},
        ),
        returnValue: _i7.Future<_i23.File?>.value(),
        returnValueForMissingStub: _i7.Future<_i23.File?>.value(),
      ) as _i7.Future<_i23.File?>);

  @override
  _i6.CustomAlertDialog permissionDeniedDialog() => (super.noSuchMethod(
        Invocation.method(
          #permissionDeniedDialog,
          [],
        ),
        returnValue: _FakeCustomAlertDialog_11(
          this,
          Invocation.method(
            #permissionDeniedDialog,
            [],
          ),
        ),
        returnValueForMissingStub: _FakeCustomAlertDialog_11(
          this,
          Invocation.method(
            #permissionDeniedDialog,
            [],
          ),
        ),
      ) as _i6.CustomAlertDialog);
}

/// A class which mocks [EventService].
///
/// See the documentation for Mockito's code generation for more information.
class MockEventService extends _i2.Mock implements _i13.EventService {
  @override
  _i7.Stream<List<_i24.Event>> get eventStream => (super.noSuchMethod(
        Invocation.getter(#eventStream),
        returnValue: _i7.Stream<List<_i24.Event>>.empty(),
        returnValueForMissingStub: _i7.Stream<List<_i24.Event>>.empty(),
      ) as _i7.Stream<List<_i24.Event>>);

  @override
  _i5.OrgInfo get currentOrg => (super.noSuchMethod(
        Invocation.getter(#currentOrg),
        returnValue: _FakeOrgInfo_10(
          this,
          Invocation.getter(#currentOrg),
        ),
        returnValueForMissingStub: _FakeOrgInfo_10(
          this,
          Invocation.getter(#currentOrg),
        ),
      ) as _i5.OrgInfo);

  @override
  String get cacheKey => (super.noSuchMethod(
        Invocation.getter(#cacheKey),
        returnValue: _i21.dummyValue<String>(
          this,
          Invocation.getter(#cacheKey),
        ),
        returnValueForMissingStub: _i21.dummyValue<String>(
          this,
          Invocation.getter(#cacheKey),
        ),
      ) as String);

  @override
  _i7.Future<List<_i24.Event>> fetchDataFromApi() => (super.noSuchMethod(
        Invocation.method(
          #fetchDataFromApi,
          [],
        ),
        returnValue: _i7.Future<List<_i24.Event>>.value(<_i24.Event>[]),
        returnValueForMissingStub:
            _i7.Future<List<_i24.Event>>.value(<_i24.Event>[]),
      ) as _i7.Future<List<_i24.Event>>);

  @override
  _i7.Future<void> fetchEventsInitial() => (super.noSuchMethod(
        Invocation.method(
          #fetchEventsInitial,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> refreshFeed() => (super.noSuchMethod(
        Invocation.method(
          #refreshFeed,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  void setOrgStreamSubscription() => super.noSuchMethod(
        Invocation.method(
          #setOrgStreamSubscription,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Future<_i3.QueryResult<Object?>> createEvent(
          {required Map<String, dynamic>? variables}) =>
      (super.noSuchMethod(
        Invocation.method(
          #createEvent,
          [],
          {#variables: variables},
        ),
        returnValue: _i7.Future<_i3.QueryResult<Object?>>.value(
            _FakeQueryResult_8<Object?>(
          this,
          Invocation.method(
            #createEvent,
            [],
            {#variables: variables},
          ),
        )),
        returnValueForMissingStub: _i7.Future<_i3.QueryResult<Object?>>.value(
            _FakeQueryResult_8<Object?>(
          this,
          Invocation.method(
            #createEvent,
            [],
            {#variables: variables},
          ),
        )),
      ) as _i7.Future<_i3.QueryResult<Object?>>);

  @override
  _i7.Future<void> getEvents() => (super.noSuchMethod(
        Invocation.method(
          #getEvents,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<dynamic> fetchAttendeesByEvent(String? eventId) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchAttendeesByEvent,
          [eventId],
        ),
        returnValue: _i7.Future<dynamic>.value(),
        returnValueForMissingStub: _i7.Future<dynamic>.value(),
      ) as _i7.Future<dynamic>);

  @override
  _i7.Future<dynamic> registerForAnEvent(String? eventId) =>
      (super.noSuchMethod(
        Invocation.method(
          #registerForAnEvent,
          [eventId],
        ),
        returnValue: _i7.Future<dynamic>.value(),
        returnValueForMissingStub: _i7.Future<dynamic>.value(),
      ) as _i7.Future<dynamic>);

  @override
  _i7.Future<_i3.QueryResult<Object?>> deleteEvent(String? eventId) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteEvent,
          [eventId],
        ),
        returnValue: _i7.Future<_i3.QueryResult<Object?>>.value(
            _FakeQueryResult_8<Object?>(
          this,
          Invocation.method(
            #deleteEvent,
            [eventId],
          ),
        )),
        returnValueForMissingStub: _i7.Future<_i3.QueryResult<Object?>>.value(
            _FakeQueryResult_8<Object?>(
          this,
          Invocation.method(
            #deleteEvent,
            [eventId],
          ),
        )),
      ) as _i7.Future<_i3.QueryResult<Object?>>);

  @override
  _i7.Future<_i3.QueryResult<Object?>> editEvent({
    required String? eventId,
    required Map<String, dynamic>? variables,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #editEvent,
          [],
          {
            #eventId: eventId,
            #variables: variables,
          },
        ),
        returnValue: _i7.Future<_i3.QueryResult<Object?>>.value(
            _FakeQueryResult_8<Object?>(
          this,
          Invocation.method(
            #editEvent,
            [],
            {
              #eventId: eventId,
              #variables: variables,
            },
          ),
        )),
        returnValueForMissingStub: _i7.Future<_i3.QueryResult<Object?>>.value(
            _FakeQueryResult_8<Object?>(
          this,
          Invocation.method(
            #editEvent,
            [],
            {
              #eventId: eventId,
              #variables: variables,
            },
          ),
        )),
      ) as _i7.Future<_i3.QueryResult<Object?>>);

  @override
  _i7.Future<dynamic> createVolunteerGroup(Map<String, dynamic>? variables) =>
      (super.noSuchMethod(
        Invocation.method(
          #createVolunteerGroup,
          [variables],
        ),
        returnValue: _i7.Future<dynamic>.value(),
        returnValueForMissingStub: _i7.Future<dynamic>.value(),
      ) as _i7.Future<dynamic>);

  @override
  _i7.Future<dynamic> removeVolunteerGroup(Map<String, dynamic>? variables) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeVolunteerGroup,
          [variables],
        ),
        returnValue: _i7.Future<dynamic>.value(),
        returnValueForMissingStub: _i7.Future<dynamic>.value(),
      ) as _i7.Future<dynamic>);

  @override
  _i7.Future<dynamic> addVolunteerToGroup(Map<String, dynamic>? variables) =>
      (super.noSuchMethod(
        Invocation.method(
          #addVolunteerToGroup,
          [variables],
        ),
        returnValue: _i7.Future<dynamic>.value(),
        returnValueForMissingStub: _i7.Future<dynamic>.value(),
      ) as _i7.Future<dynamic>);

  @override
  _i7.Future<dynamic> removeVolunteerFromGroup(
          Map<String, dynamic>? variables) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeVolunteerFromGroup,
          [variables],
        ),
        returnValue: _i7.Future<dynamic>.value(),
        returnValueForMissingStub: _i7.Future<dynamic>.value(),
      ) as _i7.Future<dynamic>);

  @override
  _i7.Future<dynamic> updateVolunteerGroup(Map<String, dynamic>? variables) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateVolunteerGroup,
          [variables],
        ),
        returnValue: _i7.Future<dynamic>.value(),
        returnValueForMissingStub: _i7.Future<dynamic>.value(),
      ) as _i7.Future<dynamic>);

  @override
  _i7.Future<List<_i25.EventVolunteerGroup>> fetchVolunteerGroupsByEvent(
          String? eventId) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchVolunteerGroupsByEvent,
          [eventId],
        ),
        returnValue: _i7.Future<List<_i25.EventVolunteerGroup>>.value(
            <_i25.EventVolunteerGroup>[]),
        returnValueForMissingStub:
            _i7.Future<List<_i25.EventVolunteerGroup>>.value(
                <_i25.EventVolunteerGroup>[]),
      ) as _i7.Future<List<_i25.EventVolunteerGroup>>);

  @override
  _i7.Future<dynamic> fetchAgendaCategories(String? orgId) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchAgendaCategories,
          [orgId],
        ),
        returnValue: _i7.Future<dynamic>.value(),
        returnValueForMissingStub: _i7.Future<dynamic>.value(),
      ) as _i7.Future<dynamic>);

  @override
  _i7.Future<dynamic> createAgendaItem(Map<String, dynamic>? variables) =>
      (super.noSuchMethod(
        Invocation.method(
          #createAgendaItem,
          [variables],
        ),
        returnValue: _i7.Future<dynamic>.value(),
        returnValueForMissingStub: _i7.Future<dynamic>.value(),
      ) as _i7.Future<dynamic>);

  @override
  _i7.Future<dynamic> deleteAgendaItem(Map<String, dynamic>? variables) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteAgendaItem,
          [variables],
        ),
        returnValue: _i7.Future<dynamic>.value(),
        returnValueForMissingStub: _i7.Future<dynamic>.value(),
      ) as _i7.Future<dynamic>);

  @override
  _i7.Future<dynamic> updateAgendaItem(
    String? itemId,
    Map<String, dynamic>? variables,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateAgendaItem,
          [
            itemId,
            variables,
          ],
        ),
        returnValue: _i7.Future<dynamic>.value(),
        returnValueForMissingStub: _i7.Future<dynamic>.value(),
      ) as _i7.Future<dynamic>);

  @override
  _i7.Future<dynamic> fetchAgendaItems(String? eventId) => (super.noSuchMethod(
        Invocation.method(
          #fetchAgendaItems,
          [eventId],
        ),
        returnValue: _i7.Future<dynamic>.value(),
        returnValueForMissingStub: _i7.Future<dynamic>.value(),
      ) as _i7.Future<dynamic>);

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Future<List<_i24.Event>> loadCachedData() => (super.noSuchMethod(
        Invocation.method(
          #loadCachedData,
          [],
        ),
        returnValue: _i7.Future<List<_i24.Event>>.value(<_i24.Event>[]),
        returnValueForMissingStub:
            _i7.Future<List<_i24.Event>>.value(<_i24.Event>[]),
      ) as _i7.Future<List<_i24.Event>>);

  @override
  _i7.Future<void> saveDataToCache(List<_i24.Event>? data) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveDataToCache,
          [data],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<List<_i24.Event>> getNewFeedAndRefreshCache() =>
      (super.noSuchMethod(
        Invocation.method(
          #getNewFeedAndRefreshCache,
          [],
        ),
        returnValue: _i7.Future<List<_i24.Event>>.value(<_i24.Event>[]),
        returnValueForMissingStub:
            _i7.Future<List<_i24.Event>>.value(<_i24.Event>[]),
      ) as _i7.Future<List<_i24.Event>>);
}

/// A class which mocks [ChatService].
///
/// See the documentation for Mockito's code generation for more information.
class MockChatService extends _i2.Mock implements _i26.ChatService {
  @override
  Map<String, String?> get beforeCursor => (super.noSuchMethod(
        Invocation.getter(#beforeCursor),
        returnValue: <String, String?>{},
        returnValueForMissingStub: <String, String?>{},
      ) as Map<String, String?>);

  @override
  int get messagePageSize => (super.noSuchMethod(
        Invocation.getter(#messagePageSize),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  set messagePageSize(int? _messagePageSize) => super.noSuchMethod(
        Invocation.setter(
          #messagePageSize,
          _messagePageSize,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Stream<_i27.Chat> get chatListStream => (super.noSuchMethod(
        Invocation.getter(#chatListStream),
        returnValue: _i7.Stream<_i27.Chat>.empty(),
        returnValueForMissingStub: _i7.Stream<_i27.Chat>.empty(),
      ) as _i7.Stream<_i27.Chat>);

  @override
  _i7.Stream<_i28.ChatMessage> get chatMessagesStream => (super.noSuchMethod(
        Invocation.getter(#chatMessagesStream),
        returnValue: _i7.Stream<_i28.ChatMessage>.empty(),
        returnValueForMissingStub: _i7.Stream<_i28.ChatMessage>.empty(),
      ) as _i7.Stream<_i28.ChatMessage>);

  @override
  _i7.Future<_i27.Chat?> createChat({
    required String? name,
    String? description,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createChat,
          [],
          {
            #name: name,
            #description: description,
          },
        ),
        returnValue: _i7.Future<_i27.Chat?>.value(),
        returnValueForMissingStub: _i7.Future<_i27.Chat?>.value(),
      ) as _i7.Future<_i27.Chat?>);

  @override
  _i7.Future<bool> createChatMembership({
    required String? chatId,
    required String? userId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #createChatMembership,
          [],
          {
            #chatId: chatId,
            #userId: userId,
          },
        ),
        returnValue: _i7.Future<bool>.value(false),
        returnValueForMissingStub: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<List<_i27.Chat>?> getChatsByUser() => (super.noSuchMethod(
        Invocation.method(
          #getChatsByUser,
          [],
        ),
        returnValue: _i7.Future<List<_i27.Chat>?>.value(),
        returnValueForMissingStub: _i7.Future<List<_i27.Chat>?>.value(),
      ) as _i7.Future<List<_i27.Chat>?>);

  @override
  _i7.Future<_i27.Chat?> getChatDetails(
    String? chatId, {
    bool? isInitialLoad = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getChatDetails,
          [chatId],
          {#isInitialLoad: isInitialLoad},
        ),
        returnValue: _i7.Future<_i27.Chat?>.value(),
        returnValueForMissingStub: _i7.Future<_i27.Chat?>.value(),
      ) as _i7.Future<_i27.Chat?>);

  @override
  _i7.Future<List<_i28.ChatMessage>> loadMoreMessages(String? chatId) =>
      (super.noSuchMethod(
        Invocation.method(
          #loadMoreMessages,
          [chatId],
        ),
        returnValue:
            _i7.Future<List<_i28.ChatMessage>>.value(<_i28.ChatMessage>[]),
        returnValueForMissingStub:
            _i7.Future<List<_i28.ChatMessage>>.value(<_i28.ChatMessage>[]),
      ) as _i7.Future<List<_i28.ChatMessage>>);

  @override
  bool hasMoreMessages(String? chatId) => (super.noSuchMethod(
        Invocation.method(
          #hasMoreMessages,
          [chatId],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i7.Future<_i28.ChatMessage?> sendMessage({
    required String? chatId,
    required String? body,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendMessage,
          [],
          {
            #chatId: chatId,
            #body: body,
          },
        ),
        returnValue: _i7.Future<_i28.ChatMessage?>.value(),
        returnValueForMissingStub: _i7.Future<_i28.ChatMessage?>.value(),
      ) as _i7.Future<_i28.ChatMessage?>);

  @override
  _i7.Stream<_i28.ChatMessage> subscribeToChatMessages(String? chatId) =>
      (super.noSuchMethod(
        Invocation.method(
          #subscribeToChatMessages,
          [chatId],
        ),
        returnValue: _i7.Stream<_i28.ChatMessage>.empty(),
        returnValueForMissingStub: _i7.Stream<_i28.ChatMessage>.empty(),
      ) as _i7.Stream<_i28.ChatMessage>);

  @override
  void stopSubscription() => super.noSuchMethod(
        Invocation.method(
          #stopSubscription,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [UserConfig].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserConfig extends _i2.Mock implements _i15.UserConfig {
  @override
  _i7.Stream<_i5.OrgInfo> get currentOrgInfoStream => (super.noSuchMethod(
        Invocation.getter(#currentOrgInfoStream),
        returnValue: _i7.Stream<_i5.OrgInfo>.empty(),
        returnValueForMissingStub: _i7.Stream<_i5.OrgInfo>.empty(),
      ) as _i7.Stream<_i5.OrgInfo>);

  @override
  _i7.StreamController<_i5.OrgInfo> get currentOrgInfoController =>
      (super.noSuchMethod(
        Invocation.getter(#currentOrgInfoController),
        returnValue: _FakeStreamController_12<_i5.OrgInfo>(
          this,
          Invocation.getter(#currentOrgInfoController),
        ),
        returnValueForMissingStub: _FakeStreamController_12<_i5.OrgInfo>(
          this,
          Invocation.getter(#currentOrgInfoController),
        ),
      ) as _i7.StreamController<_i5.OrgInfo>);

  @override
  _i5.OrgInfo get currentOrg => (super.noSuchMethod(
        Invocation.getter(#currentOrg),
        returnValue: _FakeOrgInfo_10(
          this,
          Invocation.getter(#currentOrg),
        ),
        returnValueForMissingStub: _FakeOrgInfo_10(
          this,
          Invocation.getter(#currentOrg),
        ),
      ) as _i5.OrgInfo);

  @override
  String get currentOrgName => (super.noSuchMethod(
        Invocation.getter(#currentOrgName),
        returnValue: _i21.dummyValue<String>(
          this,
          Invocation.getter(#currentOrgName),
        ),
        returnValueForMissingStub: _i21.dummyValue<String>(
          this,
          Invocation.getter(#currentOrgName),
        ),
      ) as String);

  @override
  bool get loggedIn => (super.noSuchMethod(
        Invocation.getter(#loggedIn),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  set currentOrg(_i5.OrgInfo? org) => super.noSuchMethod(
        Invocation.setter(
          #currentOrg,
          org,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i8.User get currentUser => (super.noSuchMethod(
        Invocation.getter(#currentUser),
        returnValue: _FakeUser_13(
          this,
          Invocation.getter(#currentUser),
        ),
        returnValueForMissingStub: _FakeUser_13(
          this,
          Invocation.getter(#currentUser),
        ),
      ) as _i8.User);

  @override
  set currentUser(_i8.User? user) => super.noSuchMethod(
        Invocation.setter(
          #currentUser,
          user,
        ),
        returnValueForMissingStub: null,
      );

  @override
  void initialiseStream() => super.noSuchMethod(
        Invocation.method(
          #initialiseStream,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Future<bool> userLoggedIn() => (super.noSuchMethod(
        Invocation.method(
          #userLoggedIn,
          [],
        ),
        returnValue: _i7.Future<bool>.value(false),
        returnValueForMissingStub: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<void> userLogOut() => (super.noSuchMethod(
        Invocation.method(
          #userLogOut,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<_i3.QueryResult<Object?>> performLogout() => (super.noSuchMethod(
        Invocation.method(
          #performLogout,
          [],
        ),
        returnValue: _i7.Future<_i3.QueryResult<Object?>>.value(
            _FakeQueryResult_8<Object?>(
          this,
          Invocation.method(
            #performLogout,
            [],
          ),
        )),
        returnValueForMissingStub: _i7.Future<_i3.QueryResult<Object?>>.value(
            _FakeQueryResult_8<Object?>(
          this,
          Invocation.method(
            #performLogout,
            [],
          ),
        )),
      ) as _i7.Future<_i3.QueryResult<Object?>>);

  @override
  _i7.Future<void> updateUserJoinedOrg(List<_i5.OrgInfo>? orgDetails) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUserJoinedOrg,
          [orgDetails],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> updateUserCreatedOrg(List<_i5.OrgInfo>? orgDetails) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUserCreatedOrg,
          [orgDetails],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> updateUserMemberRequestOrg(List<_i5.OrgInfo>? orgDetails) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUserMemberRequestOrg,
          [orgDetails],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> updateUserAdminOrg(List<_i5.OrgInfo>? orgDetails) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUserAdminOrg,
          [orgDetails],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> updateAccessToken({
    required String? accessToken,
    required String? refreshToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateAccessToken,
          [],
          {
            #accessToken: accessToken,
            #refreshToken: refreshToken,
          },
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<bool> updateUser(_i8.User? updatedUserDetails) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUser,
          [updatedUserDetails],
        ),
        returnValue: _i7.Future<bool>.value(false),
        returnValueForMissingStub: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  void saveUserInHive() => super.noSuchMethod(
        Invocation.method(
          #saveUserInHive,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void saveCurrentOrgInHive(_i5.OrgInfo? saveOrgAsCurrent) =>
      super.noSuchMethod(
        Invocation.method(
          #saveCurrentOrgInHive,
          [saveOrgAsCurrent],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [AppLanguage].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppLanguage extends _i2.Mock implements _i29.AppLanguage {
  @override
  bool get isTest => (super.noSuchMethod(
        Invocation.getter(#isTest),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i9.NavigationService get navigationService => (super.noSuchMethod(
        Invocation.getter(#navigationService),
        returnValue: _FakeNavigationService_14(
          this,
          Invocation.getter(#navigationService),
        ),
        returnValueForMissingStub: _FakeNavigationService_14(
          this,
          Invocation.getter(#navigationService),
        ),
      ) as _i9.NavigationService);

  @override
  _i10.DataBaseMutationFunctions get databaseFunctions => (super.noSuchMethod(
        Invocation.getter(#databaseFunctions),
        returnValue: _FakeDataBaseMutationFunctions_15(
          this,
          Invocation.getter(#databaseFunctions),
        ),
        returnValueForMissingStub: _FakeDataBaseMutationFunctions_15(
          this,
          Invocation.getter(#databaseFunctions),
        ),
      ) as _i10.DataBaseMutationFunctions);

  @override
  _i11.Locale get appLocal => (super.noSuchMethod(
        Invocation.getter(#appLocal),
        returnValue: _FakeLocale_16(
          this,
          Invocation.getter(#appLocal),
        ),
        returnValueForMissingStub: _FakeLocale_16(
          this,
          Invocation.getter(#appLocal),
        ),
      ) as _i11.Locale);

  @override
  _i17.ViewState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _i17.ViewState.idle,
        returnValueForMissingStub: _i17.ViewState.idle,
      ) as _i17.ViewState);

  @override
  bool get isBusy => (super.noSuchMethod(
        Invocation.getter(#isBusy),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i7.Future<void> initialize() => (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> fetchLocale() => (super.noSuchMethod(
        Invocation.method(
          #fetchLocale,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i11.Locale localeResoultion(
    _i11.Locale? locale,
    Iterable<_i11.Locale>? supportedLocales,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #localeResoultion,
          [
            locale,
            supportedLocales,
          ],
        ),
        returnValue: _FakeLocale_16(
          this,
          Invocation.method(
            #localeResoultion,
            [
              locale,
              supportedLocales,
            ],
          ),
        ),
        returnValueForMissingStub: _FakeLocale_16(
          this,
          Invocation.method(
            #localeResoultion,
            [
              locale,
              supportedLocales,
            ],
          ),
        ),
      ) as _i11.Locale);

  @override
  _i7.Future<void> changeLanguage(_i11.Locale? type) => (super.noSuchMethod(
        Invocation.method(
          #changeLanguage,
          [type],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> selectLanguagePress() => (super.noSuchMethod(
        Invocation.method(
          #selectLanguagePress,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> dbLanguageUpdate() => (super.noSuchMethod(
        Invocation.method(
          #dbLanguageUpdate,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> appLanguageQuery() => (super.noSuchMethod(
        Invocation.method(
          #appLanguageQuery,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> userLanguageQuery(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #userLanguageQuery,
          [userId],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  void setState(_i17.ViewState? viewState) => super.noSuchMethod(
        Invocation.method(
          #setState,
          [viewState],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i11.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i11.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [SignupDetailsViewModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockSignupDetailsViewModel extends _i2.Mock
    implements _i30.SignupDetailsViewModel {
  @override
  _i1.GlobalKey<_i1.FormState> get formKey => (super.noSuchMethod(
        Invocation.getter(#formKey),
        returnValue: _FakeGlobalKey_0<_i1.FormState>(
          this,
          Invocation.getter(#formKey),
        ),
        returnValueForMissingStub: _FakeGlobalKey_0<_i1.FormState>(
          this,
          Invocation.getter(#formKey),
        ),
      ) as _i1.GlobalKey<_i1.FormState>);

  @override
  List<Map<String, dynamic>> get greeting => (super.noSuchMethod(
        Invocation.getter(#greeting),
        returnValue: <Map<String, dynamic>>[],
        returnValueForMissingStub: <Map<String, dynamic>>[],
      ) as List<Map<String, dynamic>>);

  @override
  set greeting(List<Map<String, dynamic>>? _greeting) => super.noSuchMethod(
        Invocation.setter(
          #greeting,
          _greeting,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.OrgInfo get selectedOrganization => (super.noSuchMethod(
        Invocation.getter(#selectedOrganization),
        returnValue: _FakeOrgInfo_10(
          this,
          Invocation.getter(#selectedOrganization),
        ),
        returnValueForMissingStub: _FakeOrgInfo_10(
          this,
          Invocation.getter(#selectedOrganization),
        ),
      ) as _i5.OrgInfo);

  @override
  set selectedOrganization(_i5.OrgInfo? _selectedOrganization) =>
      super.noSuchMethod(
        Invocation.setter(
          #selectedOrganization,
          _selectedOrganization,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i12.FlutterSecureStorage get secureStorage => (super.noSuchMethod(
        Invocation.getter(#secureStorage),
        returnValue: _FakeFlutterSecureStorage_17(
          this,
          Invocation.getter(#secureStorage),
        ),
        returnValueForMissingStub: _FakeFlutterSecureStorage_17(
          this,
          Invocation.getter(#secureStorage),
        ),
      ) as _i12.FlutterSecureStorage);

  @override
  set secureStorage(_i12.FlutterSecureStorage? _secureStorage) =>
      super.noSuchMethod(
        Invocation.setter(
          #secureStorage,
          _secureStorage,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i1.TextEditingController get confirmPassword => (super.noSuchMethod(
        Invocation.getter(#confirmPassword),
        returnValue: _FakeTextEditingController_18(
          this,
          Invocation.getter(#confirmPassword),
        ),
        returnValueForMissingStub: _FakeTextEditingController_18(
          this,
          Invocation.getter(#confirmPassword),
        ),
      ) as _i1.TextEditingController);

  @override
  set confirmPassword(_i1.TextEditingController? _confirmPassword) =>
      super.noSuchMethod(
        Invocation.setter(
          #confirmPassword,
          _confirmPassword,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i1.TextEditingController get firstName => (super.noSuchMethod(
        Invocation.getter(#firstName),
        returnValue: _FakeTextEditingController_18(
          this,
          Invocation.getter(#firstName),
        ),
        returnValueForMissingStub: _FakeTextEditingController_18(
          this,
          Invocation.getter(#firstName),
        ),
      ) as _i1.TextEditingController);

  @override
  set firstName(_i1.TextEditingController? _firstName) => super.noSuchMethod(
        Invocation.setter(
          #firstName,
          _firstName,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i1.TextEditingController get lastName => (super.noSuchMethod(
        Invocation.getter(#lastName),
        returnValue: _FakeTextEditingController_18(
          this,
          Invocation.getter(#lastName),
        ),
        returnValueForMissingStub: _FakeTextEditingController_18(
          this,
          Invocation.getter(#lastName),
        ),
      ) as _i1.TextEditingController);

  @override
  set lastName(_i1.TextEditingController? _lastName) => super.noSuchMethod(
        Invocation.setter(
          #lastName,
          _lastName,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i1.TextEditingController get password => (super.noSuchMethod(
        Invocation.getter(#password),
        returnValue: _FakeTextEditingController_18(
          this,
          Invocation.getter(#password),
        ),
        returnValueForMissingStub: _FakeTextEditingController_18(
          this,
          Invocation.getter(#password),
        ),
      ) as _i1.TextEditingController);

  @override
  set password(_i1.TextEditingController? _password) => super.noSuchMethod(
        Invocation.setter(
          #password,
          _password,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i1.TextEditingController get email => (super.noSuchMethod(
        Invocation.getter(#email),
        returnValue: _FakeTextEditingController_18(
          this,
          Invocation.getter(#email),
        ),
        returnValueForMissingStub: _FakeTextEditingController_18(
          this,
          Invocation.getter(#email),
        ),
      ) as _i1.TextEditingController);

  @override
  set email(_i1.TextEditingController? _email) => super.noSuchMethod(
        Invocation.setter(
          #email,
          _email,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i1.AutovalidateMode get validate => (super.noSuchMethod(
        Invocation.getter(#validate),
        returnValue: _i1.AutovalidateMode.disabled,
        returnValueForMissingStub: _i1.AutovalidateMode.disabled,
      ) as _i1.AutovalidateMode);

  @override
  set validate(_i1.AutovalidateMode? _validate) => super.noSuchMethod(
        Invocation.setter(
          #validate,
          _validate,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i1.FocusNode get confirmFocus => (super.noSuchMethod(
        Invocation.getter(#confirmFocus),
        returnValue: _FakeFocusNode_19(
          this,
          Invocation.getter(#confirmFocus),
        ),
        returnValueForMissingStub: _FakeFocusNode_19(
          this,
          Invocation.getter(#confirmFocus),
        ),
      ) as _i1.FocusNode);

  @override
  set confirmFocus(_i1.FocusNode? _confirmFocus) => super.noSuchMethod(
        Invocation.setter(
          #confirmFocus,
          _confirmFocus,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get hidePassword => (super.noSuchMethod(
        Invocation.getter(#hidePassword),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  set hidePassword(bool? _hidePassword) => super.noSuchMethod(
        Invocation.setter(
          #hidePassword,
          _hidePassword,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i17.ViewState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _i17.ViewState.idle,
        returnValueForMissingStub: _i17.ViewState.idle,
      ) as _i17.ViewState);

  @override
  bool get isBusy => (super.noSuchMethod(
        Invocation.getter(#isBusy),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  void initialise(_i5.OrgInfo? org) => super.noSuchMethod(
        Invocation.method(
          #initialise,
          [org],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Future<void> signUp() => (super.noSuchMethod(
        Invocation.method(
          #signUp,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> storingCredentialsInSecureStorage() => (super.noSuchMethod(
        Invocation.method(
          #storingCredentialsInSecureStorage,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  void setState(_i17.ViewState? viewState) => super.noSuchMethod(
        Invocation.method(
          #setState,
          [viewState],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i11.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i11.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [Post].
///
/// See the documentation for Mockito's code generation for more information.
class MockPost extends _i2.Mock implements _i20.Post {
  @override
  set id(String? _id) => super.noSuchMethod(
        Invocation.setter(
          #id,
          _id,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set caption(String? _caption) => super.noSuchMethod(
        Invocation.setter(
          #caption,
          _caption,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set commentsCount(int? _commentsCount) => super.noSuchMethod(
        Invocation.setter(
          #commentsCount,
          _commentsCount,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set upvotesCount(int? _upvotesCount) => super.noSuchMethod(
        Invocation.setter(
          #upvotesCount,
          _upvotesCount,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set downvotesCount(int? _downvotesCount) => super.noSuchMethod(
        Invocation.setter(
          #downvotesCount,
          _downvotesCount,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set attachments(List<_i31.AttachmentModel>? _attachments) =>
      super.noSuchMethod(
        Invocation.setter(
          #attachments,
          _attachments,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set createdAt(DateTime? _createdAt) => super.noSuchMethod(
        Invocation.setter(
          #createdAt,
          _createdAt,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set creator(_i8.User? _creator) => super.noSuchMethod(
        Invocation.setter(
          #creator,
          _creator,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get hasVoted => (super.noSuchMethod(
        Invocation.getter(#hasVoted),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  set hasVoted(bool? _hasVoted) => super.noSuchMethod(
        Invocation.setter(
          #hasVoted,
          _hasVoted,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set voteType(String? _voteType) => super.noSuchMethod(
        Invocation.setter(
          #voteType,
          _voteType,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set organization(_i5.OrgInfo? _organization) => super.noSuchMethod(
        Invocation.setter(
          #organization,
          _organization,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set isPinned(bool? _isPinned) => super.noSuchMethod(
        Invocation.setter(
          #isPinned,
          _isPinned,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set pinnedAt(DateTime? _pinnedAt) => super.noSuchMethod(
        Invocation.setter(
          #pinnedAt,
          _pinnedAt,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String getPostCreatedDuration() => (super.noSuchMethod(
        Invocation.method(
          #getPostCreatedDuration,
          [],
        ),
        returnValue: _i21.dummyValue<String>(
          this,
          Invocation.method(
            #getPostCreatedDuration,
            [],
          ),
        ),
        returnValueForMissingStub: _i21.dummyValue<String>(
          this,
          Invocation.method(
            #getPostCreatedDuration,
            [],
          ),
        ),
      ) as String);

  @override
  String getPostPinnedDuration() => (super.noSuchMethod(
        Invocation.method(
          #getPostPinnedDuration,
          [],
        ),
        returnValue: _i21.dummyValue<String>(
          this,
          Invocation.method(
            #getPostPinnedDuration,
            [],
          ),
        ),
        returnValueForMissingStub: _i21.dummyValue<String>(
          this,
          Invocation.method(
            #getPostPinnedDuration,
            [],
          ),
        ),
      ) as String);

  @override
  _i7.Future<void> getPresignedUrl(String? id) => (super.noSuchMethod(
        Invocation.method(
          #getPresignedUrl,
          [id],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
}

/// A class which mocks [DataBaseMutationFunctions].
///
/// See the documentation for Mockito's code generation for more information.
class MockDataBaseMutationFunctions extends _i2.Mock
    implements _i10.DataBaseMutationFunctions {
  @override
  _i3.GraphQLClient get clientNonAuth => (super.noSuchMethod(
        Invocation.getter(#clientNonAuth),
        returnValue: _FakeGraphQLClient_2(
          this,
          Invocation.getter(#clientNonAuth),
        ),
        returnValueForMissingStub: _FakeGraphQLClient_2(
          this,
          Invocation.getter(#clientNonAuth),
        ),
      ) as _i3.GraphQLClient);

  @override
  set clientNonAuth(_i3.GraphQLClient? _clientNonAuth) => super.noSuchMethod(
        Invocation.setter(
          #clientNonAuth,
          _clientNonAuth,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.GraphQLClient get clientAuth => (super.noSuchMethod(
        Invocation.getter(#clientAuth),
        returnValue: _FakeGraphQLClient_2(
          this,
          Invocation.getter(#clientAuth),
        ),
        returnValueForMissingStub: _FakeGraphQLClient_2(
          this,
          Invocation.getter(#clientAuth),
        ),
      ) as _i3.GraphQLClient);

  @override
  set clientAuth(_i3.GraphQLClient? _clientAuth) => super.noSuchMethod(
        Invocation.setter(
          #clientAuth,
          _clientAuth,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.QueryResult<Object?> get noData => (super.noSuchMethod(
        Invocation.getter(#noData),
        returnValue: _FakeQueryResult_8<Object?>(
          this,
          Invocation.getter(#noData),
        ),
        returnValueForMissingStub: _FakeQueryResult_8<Object?>(
          this,
          Invocation.getter(#noData),
        ),
      ) as _i3.QueryResult<Object?>);

  @override
  set noData(_i3.QueryResult<Object?>? _noData) => super.noSuchMethod(
        Invocation.setter(
          #noData,
          _noData,
        ),
        returnValueForMissingStub: null,
      );

  @override
  void init() => super.noSuchMethod(
        Invocation.method(
          #init,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void initClientNonAuth() => super.noSuchMethod(
        Invocation.method(
          #initClientNonAuth,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Future<_i3.QueryResult<Object?>> gqlAuthQuery(
    String? query, {
    Map<String, dynamic>? variables,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #gqlAuthQuery,
          [query],
          {#variables: variables},
        ),
        returnValue: _i7.Future<_i3.QueryResult<Object?>>.value(
            _FakeQueryResult_8<Object?>(
          this,
          Invocation.method(
            #gqlAuthQuery,
            [query],
            {#variables: variables},
          ),
        )),
        returnValueForMissingStub: _i7.Future<_i3.QueryResult<Object?>>.value(
            _FakeQueryResult_8<Object?>(
          this,
          Invocation.method(
            #gqlAuthQuery,
            [query],
            {#variables: variables},
          ),
        )),
      ) as _i7.Future<_i3.QueryResult<Object?>>);

  @override
  _i7.Future<_i3.QueryResult<Object?>> gqlAuthMutation(
    String? mutation, {
    Map<String, dynamic>? variables,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #gqlAuthMutation,
          [mutation],
          {#variables: variables},
        ),
        returnValue: _i7.Future<_i3.QueryResult<Object?>>.value(
            _FakeQueryResult_8<Object?>(
          this,
          Invocation.method(
            #gqlAuthMutation,
            [mutation],
            {#variables: variables},
          ),
        )),
        returnValueForMissingStub: _i7.Future<_i3.QueryResult<Object?>>.value(
            _FakeQueryResult_8<Object?>(
          this,
          Invocation.method(
            #gqlAuthMutation,
            [mutation],
            {#variables: variables},
          ),
        )),
      ) as _i7.Future<_i3.QueryResult<Object?>>);

  @override
  _i7.Future<_i3.QueryResult<Object?>> gqlNonAuthMutation(
    String? mutation, {
    Map<String, dynamic>? variables,
    bool? reCall = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #gqlNonAuthMutation,
          [mutation],
          {
            #variables: variables,
            #reCall: reCall,
          },
        ),
        returnValue: _i7.Future<_i3.QueryResult<Object?>>.value(
            _FakeQueryResult_8<Object?>(
          this,
          Invocation.method(
            #gqlNonAuthMutation,
            [mutation],
            {
              #variables: variables,
              #reCall: reCall,
            },
          ),
        )),
        returnValueForMissingStub: _i7.Future<_i3.QueryResult<Object?>>.value(
            _FakeQueryResult_8<Object?>(
          this,
          Invocation.method(
            #gqlNonAuthMutation,
            [mutation],
            {
              #variables: variables,
              #reCall: reCall,
            },
          ),
        )),
      ) as _i7.Future<_i3.QueryResult<Object?>>);

  @override
  _i7.Future<_i3.QueryResult<Object?>> gqlNonAuthQuery(
    String? query, {
    Map<String, dynamic>? variables,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #gqlNonAuthQuery,
          [query],
          {#variables: variables},
        ),
        returnValue: _i7.Future<_i3.QueryResult<Object?>>.value(
            _FakeQueryResult_8<Object?>(
          this,
          Invocation.method(
            #gqlNonAuthQuery,
            [query],
            {#variables: variables},
          ),
        )),
        returnValueForMissingStub: _i7.Future<_i3.QueryResult<Object?>>.value(
            _FakeQueryResult_8<Object?>(
          this,
          Invocation.method(
            #gqlNonAuthQuery,
            [query],
            {#variables: variables},
          ),
        )),
      ) as _i7.Future<_i3.QueryResult<Object?>>);

  @override
  _i7.Future<bool> refreshAccessToken(String? refreshToken) =>
      (super.noSuchMethod(
        Invocation.method(
          #refreshAccessToken,
          [refreshToken],
        ),
        returnValue: _i7.Future<bool>.value(false),
        returnValueForMissingStub: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<dynamic> fetchOrgById(String? id) => (super.noSuchMethod(
        Invocation.method(
          #fetchOrgById,
          [id],
        ),
        returnValue: _i7.Future<dynamic>.value(),
        returnValueForMissingStub: _i7.Future<dynamic>.value(),
      ) as _i7.Future<dynamic>);

  @override
  _i7.Stream<_i3.QueryResult<Object?>> gqlAuthSubscription(
    String? subscription, {
    Map<String, dynamic>? variables,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #gqlAuthSubscription,
          [subscription],
          {#variables: variables},
        ),
        returnValue: _i7.Stream<_i3.QueryResult<Object?>>.empty(),
        returnValueForMissingStub: _i7.Stream<_i3.QueryResult<Object?>>.empty(),
      ) as _i7.Stream<_i3.QueryResult<Object?>>);
}

/// A class which mocks [OrganizationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockOrganizationService extends _i2.Mock
    implements _i32.OrganizationService {
  @override
  _i7.Future<List<_i8.User>> getOrgMembersList(String? orgId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getOrgMembersList,
          [orgId],
        ),
        returnValue: _i7.Future<List<_i8.User>>.value(<_i8.User>[]),
        returnValueForMissingStub:
            _i7.Future<List<_i8.User>>.value(<_i8.User>[]),
      ) as _i7.Future<List<_i8.User>>);
}

/// A class which mocks [ExploreEventsViewModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockExploreEventsViewModel extends _i2.Mock
    implements _i33.ExploreEventsViewModel {
  @override
  bool get demoMode => (super.noSuchMethod(
        Invocation.getter(#demoMode),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  set demoMode(bool? _demoMode) => super.noSuchMethod(
        Invocation.setter(
          #demoMode,
          _demoMode,
        ),
        returnValueForMissingStub: null,
      );

  @override
  List<_i24.Event> get events => (super.noSuchMethod(
        Invocation.getter(#events),
        returnValue: <_i24.Event>[],
        returnValueForMissingStub: <_i24.Event>[],
      ) as List<_i24.Event>);

  @override
  List<_i24.Event> get userEvents => (super.noSuchMethod(
        Invocation.getter(#userEvents),
        returnValue: <_i24.Event>[],
        returnValueForMissingStub: <_i24.Event>[],
      ) as List<_i24.Event>);

  @override
  _i13.EventService get eventService => (super.noSuchMethod(
        Invocation.getter(#eventService),
        returnValue: _FakeEventService_20(
          this,
          Invocation.getter(#eventService),
        ),
        returnValueForMissingStub: _FakeEventService_20(
          this,
          Invocation.getter(#eventService),
        ),
      ) as _i13.EventService);

  @override
  String get emptyListMessage => (super.noSuchMethod(
        Invocation.getter(#emptyListMessage),
        returnValue: _i21.dummyValue<String>(
          this,
          Invocation.getter(#emptyListMessage),
        ),
        returnValueForMissingStub: _i21.dummyValue<String>(
          this,
          Invocation.getter(#emptyListMessage),
        ),
      ) as String);

  @override
  String get chosenValue => (super.noSuchMethod(
        Invocation.getter(#chosenValue),
        returnValue: _i21.dummyValue<String>(
          this,
          Invocation.getter(#chosenValue),
        ),
        returnValueForMissingStub: _i21.dummyValue<String>(
          this,
          Invocation.getter(#chosenValue),
        ),
      ) as String);

  @override
  _i17.ViewState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _i17.ViewState.idle,
        returnValueForMissingStub: _i17.ViewState.idle,
      ) as _i17.ViewState);

  @override
  bool get isBusy => (super.noSuchMethod(
        Invocation.getter(#isBusy),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i7.Future<void> fetchNewEvents() => (super.noSuchMethod(
        Invocation.method(
          #fetchNewEvents,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> refreshEvents() => (super.noSuchMethod(
        Invocation.method(
          #refreshEvents,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> initialise() => (super.noSuchMethod(
        Invocation.method(
          #initialise,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> checkIfExistsAndAddNewEvents(List<_i24.Event>? newEvents) =>
      (super.noSuchMethod(
        Invocation.method(
          #checkIfExistsAndAddNewEvents,
          [newEvents],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> deleteEvent({required String? eventId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteEvent,
          [],
          {#eventId: eventId},
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> choseValueFromDropdown(String? value) => (super.noSuchMethod(
        Invocation.method(
          #choseValueFromDropdown,
          [value],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setState(_i17.ViewState? viewState) => super.noSuchMethod(
        Invocation.method(
          #setState,
          [viewState],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i11.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i11.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [OrganizationFeedViewModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockOrganizationFeedViewModel extends _i2.Mock
    implements _i34.OrganizationFeedViewModel {
  @override
  List<_i20.Post> get posts => (super.noSuchMethod(
        Invocation.getter(#posts),
        returnValue: <_i20.Post>[],
        returnValueForMissingStub: <_i20.Post>[],
      ) as List<_i20.Post>);

  @override
  List<_i20.Post> get userPosts => (super.noSuchMethod(
        Invocation.getter(#userPosts),
        returnValue: <_i20.Post>[],
        returnValueForMissingStub: <_i20.Post>[],
      ) as List<_i20.Post>);

  @override
  List<_i20.Post> get pinnedPosts => (super.noSuchMethod(
        Invocation.getter(#pinnedPosts),
        returnValue: <_i20.Post>[],
        returnValueForMissingStub: <_i20.Post>[],
      ) as List<_i20.Post>);

  @override
  String get currentOrgName => (super.noSuchMethod(
        Invocation.getter(#currentOrgName),
        returnValue: _i21.dummyValue<String>(
          this,
          Invocation.getter(#currentOrgName),
        ),
        returnValueForMissingStub: _i21.dummyValue<String>(
          this,
          Invocation.getter(#currentOrgName),
        ),
      ) as String);

  @override
  bool get isFetchingPosts => (super.noSuchMethod(
        Invocation.getter(#isFetchingPosts),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i17.ViewState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _i17.ViewState.idle,
        returnValueForMissingStub: _i17.ViewState.idle,
      ) as _i17.ViewState);

  @override
  bool get isBusy => (super.noSuchMethod(
        Invocation.getter(#isBusy),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  void setCurrentOrganizationName(String? updatedOrganization) =>
      super.noSuchMethod(
        Invocation.method(
          #setCurrentOrganizationName,
          [updatedOrganization],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void fetchNewPosts() => super.noSuchMethod(
        Invocation.method(
          #fetchNewPosts,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Future<void> initialise() => (super.noSuchMethod(
        Invocation.method(
          #initialise,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  void setPosts(List<_i20.Post>? newPosts) => super.noSuchMethod(
        Invocation.method(
          #setPosts,
          [newPosts],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setPinnedPosts(List<_i20.Post>? newPinPosts) => super.noSuchMethod(
        Invocation.method(
          #setPinnedPosts,
          [newPinPosts],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void navigateToIndividualPage(_i20.Post? post) => super.noSuchMethod(
        Invocation.method(
          #navigateToIndividualPage,
          [post],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void navigateToPinnedPostPage() => super.noSuchMethod(
        Invocation.method(
          #navigateToPinnedPostPage,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addNewPost(_i20.Post? newPost) => super.noSuchMethod(
        Invocation.method(
          #addNewPost,
          [newPost],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void updatedPost(_i20.Post? post) => super.noSuchMethod(
        Invocation.method(
          #updatedPost,
          [post],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Future<void> deletePost(_i20.Post? post) => (super.noSuchMethod(
        Invocation.method(
          #deletePost,
          [post],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  void nextPage() => super.noSuchMethod(
        Invocation.method(
          #nextPage,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void previousPage() => super.noSuchMethod(
        Invocation.method(
          #previousPage,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setState(_i17.ViewState? viewState) => super.noSuchMethod(
        Invocation.method(
          #setState,
          [viewState],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i11.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i11.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [Validator].
///
/// See the documentation for Mockito's code generation for more information.
class MockValidator extends _i2.Mock implements _i35.Validator {
  @override
  _i7.Future<bool?> validateUrlExistence(String? url) => (super.noSuchMethod(
        Invocation.method(
          #validateUrlExistence,
          [url],
        ),
        returnValue: _i7.Future<bool?>.value(),
        returnValueForMissingStub: _i7.Future<bool?>.value(),
      ) as _i7.Future<bool?>);
}

/// A class which mocks [QRViewController].
///
/// See the documentation for Mockito's code generation for more information.
class MockQRViewController extends _i2.Mock implements _i36.QRViewController {
  @override
  bool get disposed => (super.noSuchMethod(
        Invocation.getter(#disposed),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  set disposed(bool? _disposed) => super.noSuchMethod(
        Invocation.setter(
          #disposed,
          _disposed,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Stream<_i37.Barcode> get scannedDataStream => (super.noSuchMethod(
        Invocation.getter(#scannedDataStream),
        returnValue: _i7.Stream<_i37.Barcode>.empty(),
        returnValueForMissingStub: _i7.Stream<_i37.Barcode>.empty(),
      ) as _i7.Stream<_i37.Barcode>);

  @override
  bool get hasPermissions => (super.noSuchMethod(
        Invocation.getter(#hasPermissions),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i7.Future<_i38.CameraFacing> getCameraInfo() => (super.noSuchMethod(
        Invocation.method(
          #getCameraInfo,
          [],
        ),
        returnValue:
            _i7.Future<_i38.CameraFacing>.value(_i38.CameraFacing.back),
        returnValueForMissingStub:
            _i7.Future<_i38.CameraFacing>.value(_i38.CameraFacing.back),
      ) as _i7.Future<_i38.CameraFacing>);

  @override
  _i7.Future<_i38.CameraFacing> flipCamera() => (super.noSuchMethod(
        Invocation.method(
          #flipCamera,
          [],
        ),
        returnValue:
            _i7.Future<_i38.CameraFacing>.value(_i38.CameraFacing.back),
        returnValueForMissingStub:
            _i7.Future<_i38.CameraFacing>.value(_i38.CameraFacing.back),
      ) as _i7.Future<_i38.CameraFacing>);

  @override
  _i7.Future<bool?> getFlashStatus() => (super.noSuchMethod(
        Invocation.method(
          #getFlashStatus,
          [],
        ),
        returnValue: _i7.Future<bool?>.value(),
        returnValueForMissingStub: _i7.Future<bool?>.value(),
      ) as _i7.Future<bool?>);

  @override
  _i7.Future<void> toggleFlash() => (super.noSuchMethod(
        Invocation.method(
          #toggleFlash,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> pauseCamera() => (super.noSuchMethod(
        Invocation.method(
          #pauseCamera,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> stopCamera() => (super.noSuchMethod(
        Invocation.method(
          #stopCamera,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> resumeCamera() => (super.noSuchMethod(
        Invocation.method(
          #resumeCamera,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<_i14.SystemFeatures> getSystemFeatures() => (super.noSuchMethod(
        Invocation.method(
          #getSystemFeatures,
          [],
        ),
        returnValue:
            _i7.Future<_i14.SystemFeatures>.value(_FakeSystemFeatures_21(
          this,
          Invocation.method(
            #getSystemFeatures,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i14.SystemFeatures>.value(_FakeSystemFeatures_21(
          this,
          Invocation.method(
            #getSystemFeatures,
            [],
          ),
        )),
      ) as _i7.Future<_i14.SystemFeatures>);

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Future<void> scanInvert(bool? isScanInvert) => (super.noSuchMethod(
        Invocation.method(
          #scanInvert,
          [isScanInvert],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
}

/// A class which mocks [CommentService].
///
/// See the documentation for Mockito's code generation for more information.
class MockCommentService extends _i2.Mock implements _i39.CommentService {
  @override
  _i7.Future<void> createComments(
    String? postId,
    String? body,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #createComments,
          [
            postId,
            body,
          ],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<Map<String, dynamic>> getCommentsForPost({
    required String? postId,
    int? first = 10,
    String? after,
    int? last,
    String? before,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCommentsForPost,
          [],
          {
            #postId: postId,
            #first: first,
            #after: after,
            #last: last,
            #before: before,
          },
        ),
        returnValue:
            _i7.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
        returnValueForMissingStub:
            _i7.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i7.Future<Map<String, dynamic>>);
}

/// A class which mocks [AppTheme].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppTheme extends _i2.Mock implements _i40.AppTheme {
  @override
  String get key => (super.noSuchMethod(
        Invocation.getter(#key),
        returnValue: _i21.dummyValue<String>(
          this,
          Invocation.getter(#key),
        ),
        returnValueForMissingStub: _i21.dummyValue<String>(
          this,
          Invocation.getter(#key),
        ),
      ) as String);

  @override
  bool get isdarkTheme => (super.noSuchMethod(
        Invocation.getter(#isdarkTheme),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i1.ThemeData get theme => (super.noSuchMethod(
        Invocation.getter(#theme),
        returnValue: _FakeThemeData_22(
          this,
          Invocation.getter(#theme),
        ),
        returnValueForMissingStub: _FakeThemeData_22(
          this,
          Invocation.getter(#theme),
        ),
      ) as _i1.ThemeData);

  @override
  _i17.ViewState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _i17.ViewState.idle,
        returnValueForMissingStub: _i17.ViewState.idle,
      ) as _i17.ViewState);

  @override
  bool get isBusy => (super.noSuchMethod(
        Invocation.getter(#isBusy),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  void initialize() => super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void switchTheme({required bool? isOn}) => super.noSuchMethod(
        Invocation.method(
          #switchTheme,
          [],
          {#isOn: isOn},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setState(_i17.ViewState? viewState) => super.noSuchMethod(
        Invocation.method(
          #setState,
          [viewState],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i11.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i11.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [CreateEventViewModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockCreateEventViewModel extends _i2.Mock
    implements _i41.CreateEventViewModel {
  @override
  _i1.TextEditingController get eventTitleTextController => (super.noSuchMethod(
        Invocation.getter(#eventTitleTextController),
        returnValue: _FakeTextEditingController_18(
          this,
          Invocation.getter(#eventTitleTextController),
        ),
        returnValueForMissingStub: _FakeTextEditingController_18(
          this,
          Invocation.getter(#eventTitleTextController),
        ),
      ) as _i1.TextEditingController);

  @override
  set eventTitleTextController(
          _i1.TextEditingController? _eventTitleTextController) =>
      super.noSuchMethod(
        Invocation.setter(
          #eventTitleTextController,
          _eventTitleTextController,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i1.TextEditingController get eventLocationTextController =>
      (super.noSuchMethod(
        Invocation.getter(#eventLocationTextController),
        returnValue: _FakeTextEditingController_18(
          this,
          Invocation.getter(#eventLocationTextController),
        ),
        returnValueForMissingStub: _FakeTextEditingController_18(
          this,
          Invocation.getter(#eventLocationTextController),
        ),
      ) as _i1.TextEditingController);

  @override
  set eventLocationTextController(
          _i1.TextEditingController? _eventLocationTextController) =>
      super.noSuchMethod(
        Invocation.setter(
          #eventLocationTextController,
          _eventLocationTextController,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i1.TextEditingController get eventDescriptionTextController =>
      (super.noSuchMethod(
        Invocation.getter(#eventDescriptionTextController),
        returnValue: _FakeTextEditingController_18(
          this,
          Invocation.getter(#eventDescriptionTextController),
        ),
        returnValueForMissingStub: _FakeTextEditingController_18(
          this,
          Invocation.getter(#eventDescriptionTextController),
        ),
      ) as _i1.TextEditingController);

  @override
  set eventDescriptionTextController(
          _i1.TextEditingController? _eventDescriptionTextController) =>
      super.noSuchMethod(
        Invocation.setter(
          #eventDescriptionTextController,
          _eventDescriptionTextController,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i1.TextEditingController get repeatsEveryCountController =>
      (super.noSuchMethod(
        Invocation.getter(#repeatsEveryCountController),
        returnValue: _FakeTextEditingController_18(
          this,
          Invocation.getter(#repeatsEveryCountController),
        ),
        returnValueForMissingStub: _FakeTextEditingController_18(
          this,
          Invocation.getter(#repeatsEveryCountController),
        ),
      ) as _i1.TextEditingController);

  @override
  set repeatsEveryCountController(
          _i1.TextEditingController? _repeatsEveryCountController) =>
      super.noSuchMethod(
        Invocation.setter(
          #repeatsEveryCountController,
          _repeatsEveryCountController,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i1.TextEditingController get endOccurenceController => (super.noSuchMethod(
        Invocation.getter(#endOccurenceController),
        returnValue: _FakeTextEditingController_18(
          this,
          Invocation.getter(#endOccurenceController),
        ),
        returnValueForMissingStub: _FakeTextEditingController_18(
          this,
          Invocation.getter(#endOccurenceController),
        ),
      ) as _i1.TextEditingController);

  @override
  set endOccurenceController(
          _i1.TextEditingController? _endOccurenceController) =>
      super.noSuchMethod(
        Invocation.setter(
          #endOccurenceController,
          _endOccurenceController,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i1.TimeOfDay get eventStartTime => (super.noSuchMethod(
        Invocation.getter(#eventStartTime),
        returnValue: _FakeTimeOfDay_23(
          this,
          Invocation.getter(#eventStartTime),
        ),
        returnValueForMissingStub: _FakeTimeOfDay_23(
          this,
          Invocation.getter(#eventStartTime),
        ),
      ) as _i1.TimeOfDay);

  @override
  set eventStartTime(_i1.TimeOfDay? _eventStartTime) => super.noSuchMethod(
        Invocation.setter(
          #eventStartTime,
          _eventStartTime,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i1.TimeOfDay get eventEndTime => (super.noSuchMethod(
        Invocation.getter(#eventEndTime),
        returnValue: _FakeTimeOfDay_23(
          this,
          Invocation.getter(#eventEndTime),
        ),
        returnValueForMissingStub: _FakeTimeOfDay_23(
          this,
          Invocation.getter(#eventEndTime),
        ),
      ) as _i1.TimeOfDay);

  @override
  set eventEndTime(_i1.TimeOfDay? _eventEndTime) => super.noSuchMethod(
        Invocation.setter(
          #eventEndTime,
          _eventEndTime,
        ),
        returnValueForMissingStub: null,
      );

  @override
  DateTime get eventStartDate => (super.noSuchMethod(
        Invocation.getter(#eventStartDate),
        returnValue: _FakeDateTime_24(
          this,
          Invocation.getter(#eventStartDate),
        ),
        returnValueForMissingStub: _FakeDateTime_24(
          this,
          Invocation.getter(#eventStartDate),
        ),
      ) as DateTime);

  @override
  set eventStartDate(DateTime? _eventStartDate) => super.noSuchMethod(
        Invocation.setter(
          #eventStartDate,
          _eventStartDate,
        ),
        returnValueForMissingStub: null,
      );

  @override
  DateTime get eventEndDate => (super.noSuchMethod(
        Invocation.getter(#eventEndDate),
        returnValue: _FakeDateTime_24(
          this,
          Invocation.getter(#eventEndDate),
        ),
        returnValueForMissingStub: _FakeDateTime_24(
          this,
          Invocation.getter(#eventEndDate),
        ),
      ) as DateTime);

  @override
  set eventEndDate(DateTime? _eventEndDate) => super.noSuchMethod(
        Invocation.setter(
          #eventEndDate,
          _eventEndDate,
        ),
        returnValueForMissingStub: null,
      );

  @override
  DateTime get recurrenceStartDate => (super.noSuchMethod(
        Invocation.getter(#recurrenceStartDate),
        returnValue: _FakeDateTime_24(
          this,
          Invocation.getter(#recurrenceStartDate),
        ),
        returnValueForMissingStub: _FakeDateTime_24(
          this,
          Invocation.getter(#recurrenceStartDate),
        ),
      ) as DateTime);

  @override
  set recurrenceStartDate(DateTime? _recurrenceStartDate) => super.noSuchMethod(
        Invocation.setter(
          #recurrenceStartDate,
          _recurrenceStartDate,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set recurrenceEndDate(DateTime? _recurrenceEndDate) => super.noSuchMethod(
        Invocation.setter(
          #recurrenceEndDate,
          _recurrenceEndDate,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get isPublicSwitch => (super.noSuchMethod(
        Invocation.getter(#isPublicSwitch),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  set isPublicSwitch(bool? _isPublicSwitch) => super.noSuchMethod(
        Invocation.setter(
          #isPublicSwitch,
          _isPublicSwitch,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get isRegisterableSwitch => (super.noSuchMethod(
        Invocation.getter(#isRegisterableSwitch),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  set isRegisterableSwitch(bool? _isRegisterableSwitch) => super.noSuchMethod(
        Invocation.setter(
          #isRegisterableSwitch,
          _isRegisterableSwitch,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i1.FocusNode get titleFocus => (super.noSuchMethod(
        Invocation.getter(#titleFocus),
        returnValue: _FakeFocusNode_19(
          this,
          Invocation.getter(#titleFocus),
        ),
        returnValueForMissingStub: _FakeFocusNode_19(
          this,
          Invocation.getter(#titleFocus),
        ),
      ) as _i1.FocusNode);

  @override
  set titleFocus(_i1.FocusNode? _titleFocus) => super.noSuchMethod(
        Invocation.setter(
          #titleFocus,
          _titleFocus,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i1.FocusNode get locationFocus => (super.noSuchMethod(
        Invocation.getter(#locationFocus),
        returnValue: _FakeFocusNode_19(
          this,
          Invocation.getter(#locationFocus),
        ),
        returnValueForMissingStub: _FakeFocusNode_19(
          this,
          Invocation.getter(#locationFocus),
        ),
      ) as _i1.FocusNode);

  @override
  set locationFocus(_i1.FocusNode? _locationFocus) => super.noSuchMethod(
        Invocation.setter(
          #locationFocus,
          _locationFocus,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i1.FocusNode get descriptionFocus => (super.noSuchMethod(
        Invocation.getter(#descriptionFocus),
        returnValue: _FakeFocusNode_19(
          this,
          Invocation.getter(#descriptionFocus),
        ),
        returnValueForMissingStub: _FakeFocusNode_19(
          this,
          Invocation.getter(#descriptionFocus),
        ),
      ) as _i1.FocusNode);

  @override
  set descriptionFocus(_i1.FocusNode? _descriptionFocus) => super.noSuchMethod(
        Invocation.setter(
          #descriptionFocus,
          _descriptionFocus,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get isAllDay => (super.noSuchMethod(
        Invocation.getter(#isAllDay),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  set isAllDay(bool? _isAllDay) => super.noSuchMethod(
        Invocation.setter(
          #isAllDay,
          _isAllDay,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get isRecurring => (super.noSuchMethod(
        Invocation.getter(#isRecurring),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  set isRecurring(bool? _isRecurring) => super.noSuchMethod(
        Invocation.setter(
          #isRecurring,
          _isRecurring,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get recurrenceInterval => (super.noSuchMethod(
        Invocation.getter(#recurrenceInterval),
        returnValue: _i21.dummyValue<String>(
          this,
          Invocation.getter(#recurrenceInterval),
        ),
        returnValueForMissingStub: _i21.dummyValue<String>(
          this,
          Invocation.getter(#recurrenceInterval),
        ),
      ) as String);

  @override
  set recurrenceInterval(String? _recurrenceInterval) => super.noSuchMethod(
        Invocation.setter(
          #recurrenceInterval,
          _recurrenceInterval,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get eventEndType => (super.noSuchMethod(
        Invocation.getter(#eventEndType),
        returnValue: _i21.dummyValue<String>(
          this,
          Invocation.getter(#eventEndType),
        ),
        returnValueForMissingStub: _i21.dummyValue<String>(
          this,
          Invocation.getter(#eventEndType),
        ),
      ) as String);

  @override
  set eventEndType(String? _eventEndType) => super.noSuchMethod(
        Invocation.setter(
          #eventEndType,
          _eventEndType,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get frequency => (super.noSuchMethod(
        Invocation.getter(#frequency),
        returnValue: _i21.dummyValue<String>(
          this,
          Invocation.getter(#frequency),
        ),
        returnValueForMissingStub: _i21.dummyValue<String>(
          this,
          Invocation.getter(#frequency),
        ),
      ) as String);

  @override
  set frequency(String? _frequency) => super.noSuchMethod(
        Invocation.setter(
          #frequency,
          _frequency,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Set<String> get weekDays => (super.noSuchMethod(
        Invocation.getter(#weekDays),
        returnValue: <String>{},
        returnValueForMissingStub: <String>{},
      ) as Set<String>);

  @override
  set weekDays(Set<String>? _weekDays) => super.noSuchMethod(
        Invocation.setter(
          #weekDays,
          _weekDays,
        ),
        returnValueForMissingStub: null,
      );

  @override
  int get interval => (super.noSuchMethod(
        Invocation.getter(#interval),
        returnValue: 0,
        returnValueForMissingStub: 0,
      ) as int);

  @override
  set interval(int? _interval) => super.noSuchMethod(
        Invocation.setter(
          #interval,
          _interval,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set count(int? _count) => super.noSuchMethod(
        Invocation.setter(
          #count,
          _count,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set weekDayOccurenceInMonth(int? _weekDayOccurenceInMonth) =>
      super.noSuchMethod(
        Invocation.setter(
          #weekDayOccurenceInMonth,
          _weekDayOccurenceInMonth,
        ),
        returnValueForMissingStub: null,
      );

  @override
  String get recurrenceLabel => (super.noSuchMethod(
        Invocation.getter(#recurrenceLabel),
        returnValue: _i21.dummyValue<String>(
          this,
          Invocation.getter(#recurrenceLabel),
        ),
        returnValueForMissingStub: _i21.dummyValue<String>(
          this,
          Invocation.getter(#recurrenceLabel),
        ),
      ) as String);

  @override
  set recurrenceLabel(String? _recurrenceLabel) => super.noSuchMethod(
        Invocation.setter(
          #recurrenceLabel,
          _recurrenceLabel,
        ),
        returnValueForMissingStub: null,
      );

  @override
  List<_i8.User> get orgMembersList => (super.noSuchMethod(
        Invocation.getter(#orgMembersList),
        returnValue: <_i8.User>[],
        returnValueForMissingStub: <_i8.User>[],
      ) as List<_i8.User>);

  @override
  set orgMembersList(List<_i8.User>? _orgMembersList) => super.noSuchMethod(
        Invocation.setter(
          #orgMembersList,
          _orgMembersList,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i1.GlobalKey<_i1.FormState> get formKey => (super.noSuchMethod(
        Invocation.getter(#formKey),
        returnValue: _FakeGlobalKey_0<_i1.FormState>(
          this,
          Invocation.getter(#formKey),
        ),
        returnValueForMissingStub: _FakeGlobalKey_0<_i1.FormState>(
          this,
          Invocation.getter(#formKey),
        ),
      ) as _i1.GlobalKey<_i1.FormState>);

  @override
  _i1.AutovalidateMode get validate => (super.noSuchMethod(
        Invocation.getter(#validate),
        returnValue: _i1.AutovalidateMode.disabled,
        returnValueForMissingStub: _i1.AutovalidateMode.disabled,
      ) as _i1.AutovalidateMode);

  @override
  set validate(_i1.AutovalidateMode? _validate) => super.noSuchMethod(
        Invocation.setter(
          #validate,
          _validate,
        ),
        returnValueForMissingStub: null,
      );

  @override
  List<_i8.User> get selectedMembers => (super.noSuchMethod(
        Invocation.getter(#selectedMembers),
        returnValue: <_i8.User>[],
        returnValueForMissingStub: <_i8.User>[],
      ) as List<_i8.User>);

  @override
  Map<String, bool> get memberCheckedMap => (super.noSuchMethod(
        Invocation.getter(#memberCheckedMap),
        returnValue: <String, bool>{},
        returnValueForMissingStub: <String, bool>{},
      ) as Map<String, bool>);

  @override
  _i17.ViewState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _i17.ViewState.idle,
        returnValueForMissingStub: _i17.ViewState.idle,
      ) as _i17.ViewState);

  @override
  bool get isBusy => (super.noSuchMethod(
        Invocation.getter(#isBusy),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  void initialize() => super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Future<void> createEvent() => (super.noSuchMethod(
        Invocation.method(
          #createEvent,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> getImageFromGallery({bool? camera = false}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getImageFromGallery,
          [],
          {#camera: camera},
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  void removeImage() => super.noSuchMethod(
        Invocation.method(
          #removeImage,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Future<List<_i8.User>> getCurrentOrgUsersList() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentOrgUsersList,
          [],
        ),
        returnValue: _i7.Future<List<_i8.User>>.value(<_i8.User>[]),
        returnValueForMissingStub:
            _i7.Future<List<_i8.User>>.value(<_i8.User>[]),
      ) as _i7.Future<List<_i8.User>>);

  @override
  void buildUserList() => super.noSuchMethod(
        Invocation.method(
          #buildUserList,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeUserFromList({required String? userId}) => super.noSuchMethod(
        Invocation.method(
          #removeUserFromList,
          [],
          {#userId: userId},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setEventEndDate(DateTime? selectedEndDate) => super.noSuchMethod(
        Invocation.method(
          #setEventEndDate,
          [selectedEndDate],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Future<List<_i42.Venue>> fetchVenues() => (super.noSuchMethod(
        Invocation.method(
          #fetchVenues,
          [],
        ),
        returnValue: _i7.Future<List<_i42.Venue>>.value(<_i42.Venue>[]),
        returnValueForMissingStub:
            _i7.Future<List<_i42.Venue>>.value(<_i42.Venue>[]),
      ) as _i7.Future<List<_i42.Venue>>);

  @override
  void setState(_i17.ViewState? viewState) => super.noSuchMethod(
        Invocation.method(
          #setState,
          [viewState],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i11.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i11.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [DirectChatViewModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockDirectChatViewModel extends _i2.Mock
    implements _i43.DirectChatViewModel {
  @override
  _i15.UserConfig get userConfig => (super.noSuchMethod(
        Invocation.getter(#userConfig),
        returnValue: _FakeUserConfig_25(
          this,
          Invocation.getter(#userConfig),
        ),
        returnValueForMissingStub: _FakeUserConfig_25(
          this,
          Invocation.getter(#userConfig),
        ),
      ) as _i15.UserConfig);

  @override
  _i1.GlobalKey<_i1.AnimatedListState> get listKey => (super.noSuchMethod(
        Invocation.getter(#listKey),
        returnValue: _FakeGlobalKey_0<_i1.AnimatedListState>(
          this,
          Invocation.getter(#listKey),
        ),
        returnValueForMissingStub: _FakeGlobalKey_0<_i1.AnimatedListState>(
          this,
          Invocation.getter(#listKey),
        ),
      ) as _i1.GlobalKey<_i1.AnimatedListState>);

  @override
  _i17.ChatState get chatState => (super.noSuchMethod(
        Invocation.getter(#chatState),
        returnValue: _i17.ChatState.initial,
        returnValueForMissingStub: _i17.ChatState.initial,
      ) as _i17.ChatState);

  @override
  set chatState(_i17.ChatState? _chatState) => super.noSuchMethod(
        Invocation.setter(
          #chatState,
          _chatState,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set name(String? _name) => super.noSuchMethod(
        Invocation.setter(
          #name,
          _name,
        ),
        returnValueForMissingStub: null,
      );

  @override
  List<_i44.ChatListTileDataModel> get chats => (super.noSuchMethod(
        Invocation.getter(#chats),
        returnValue: <_i44.ChatListTileDataModel>[],
        returnValueForMissingStub: <_i44.ChatListTileDataModel>[],
      ) as List<_i44.ChatListTileDataModel>);

  @override
  Map<String, List<_i28.ChatMessage>> get chatMessagesByUser =>
      (super.noSuchMethod(
        Invocation.getter(#chatMessagesByUser),
        returnValue: <String, List<_i28.ChatMessage>>{},
        returnValueForMissingStub: <String, List<_i28.ChatMessage>>{},
      ) as Map<String, List<_i28.ChatMessage>>);

  @override
  _i17.ViewState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _i17.ViewState.idle,
        returnValueForMissingStub: _i17.ViewState.idle,
      ) as _i17.ViewState);

  @override
  bool get isBusy => (super.noSuchMethod(
        Invocation.getter(#isBusy),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool isLoadingMoreMessages(String? chatId) => (super.noSuchMethod(
        Invocation.method(
          #isLoadingMoreMessages,
          [chatId],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  void refreshChats() => super.noSuchMethod(
        Invocation.method(
          #refreshChats,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Future<void> initialise() => (super.noSuchMethod(
        Invocation.method(
          #initialise,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> getChatMessages(String? chatId) => (super.noSuchMethod(
        Invocation.method(
          #getChatMessages,
          [chatId],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> loadMoreMessages(String? chatId) => (super.noSuchMethod(
        Invocation.method(
          #loadMoreMessages,
          [chatId],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  bool hasMoreMessages(String? chatId) => (super.noSuchMethod(
        Invocation.method(
          #hasMoreMessages,
          [chatId],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  _i7.Future<void> sendMessageToDirectChat(
    String? chatId,
    String? messageContent,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendMessageToDirectChat,
          [
            chatId,
            messageContent,
          ],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  String? chatName(String? chatId) => (super.noSuchMethod(
        Invocation.method(
          #chatName,
          [chatId],
        ),
        returnValueForMissingStub: null,
      ) as String?);

  @override
  void setState(_i17.ViewState? viewState) => super.noSuchMethod(
        Invocation.method(
          #setState,
          [viewState],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i11.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i11.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [SelectContactViewModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockSelectContactViewModel extends _i2.Mock
    implements _i45.SelectContactViewModel {
  @override
  _i15.UserConfig get userConfig => (super.noSuchMethod(
        Invocation.getter(#userConfig),
        returnValue: _FakeUserConfig_25(
          this,
          Invocation.getter(#userConfig),
        ),
        returnValueForMissingStub: _FakeUserConfig_25(
          this,
          Invocation.getter(#userConfig),
        ),
      ) as _i15.UserConfig);

  @override
  List<_i8.User> get orgMembersList => (super.noSuchMethod(
        Invocation.getter(#orgMembersList),
        returnValue: <_i8.User>[],
        returnValueForMissingStub: <_i8.User>[],
      ) as List<_i8.User>);

  @override
  set orgMembersList(List<_i8.User>? _orgMembersList) => super.noSuchMethod(
        Invocation.setter(
          #orgMembersList,
          _orgMembersList,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i17.ViewState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _i17.ViewState.idle,
        returnValueForMissingStub: _i17.ViewState.idle,
      ) as _i17.ViewState);

  @override
  bool get isBusy => (super.noSuchMethod(
        Invocation.getter(#isBusy),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  void initialise() => super.noSuchMethod(
        Invocation.method(
          #initialise,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Future<void> getCurrentOrgUsersList() => (super.noSuchMethod(
        Invocation.method(
          #getCurrentOrgUsersList,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<String?> createChatWithUser(_i8.User? selectedUser) =>
      (super.noSuchMethod(
        Invocation.method(
          #createChatWithUser,
          [selectedUser],
        ),
        returnValue: _i7.Future<String?>.value(),
        returnValueForMissingStub: _i7.Future<String?>.value(),
      ) as _i7.Future<String?>);

  @override
  void setState(_i17.ViewState? viewState) => super.noSuchMethod(
        Invocation.method(
          #setState,
          [viewState],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i11.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i11.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [ImageCropper].
///
/// See the documentation for Mockito's code generation for more information.
class MockImageCropper extends _i2.Mock implements _i46.ImageCropper {
  @override
  _i7.Future<_i47.CroppedFile?> cropImage({
    required String? sourcePath,
    int? maxWidth,
    int? maxHeight,
    _i47.CropAspectRatio? aspectRatio,
    _i47.ImageCompressFormat? compressFormat = _i47.ImageCompressFormat.jpg,
    int? compressQuality = 90,
    List<_i47.PlatformUiSettings>? uiSettings,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #cropImage,
          [],
          {
            #sourcePath: sourcePath,
            #maxWidth: maxWidth,
            #maxHeight: maxHeight,
            #aspectRatio: aspectRatio,
            #compressFormat: compressFormat,
            #compressQuality: compressQuality,
            #uiSettings: uiSettings,
          },
        ),
        returnValue: _i7.Future<_i47.CroppedFile?>.value(),
        returnValueForMissingStub: _i7.Future<_i47.CroppedFile?>.value(),
      ) as _i7.Future<_i47.CroppedFile?>);

  @override
  _i7.Future<_i47.CroppedFile?> recoverImage() => (super.noSuchMethod(
        Invocation.method(
          #recoverImage,
          [],
        ),
        returnValue: _i7.Future<_i47.CroppedFile?>.value(),
        returnValueForMissingStub: _i7.Future<_i47.CroppedFile?>.value(),
      ) as _i7.Future<_i47.CroppedFile?>);
}

/// A class which mocks [ImagePicker].
///
/// See the documentation for Mockito's code generation for more information.
class MockImagePicker extends _i2.Mock implements _i16.ImagePicker {
  @override
  _i7.Future<_i16.XFile?> pickImage({
    required _i16.ImageSource? source,
    double? maxWidth,
    double? maxHeight,
    int? imageQuality,
    _i16.CameraDevice? preferredCameraDevice = _i16.CameraDevice.rear,
    bool? requestFullMetadata = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #pickImage,
          [],
          {
            #source: source,
            #maxWidth: maxWidth,
            #maxHeight: maxHeight,
            #imageQuality: imageQuality,
            #preferredCameraDevice: preferredCameraDevice,
            #requestFullMetadata: requestFullMetadata,
          },
        ),
        returnValue: _i7.Future<_i16.XFile?>.value(),
        returnValueForMissingStub: _i7.Future<_i16.XFile?>.value(),
      ) as _i7.Future<_i16.XFile?>);

  @override
  _i7.Future<List<_i16.XFile>> pickMultiImage({
    double? maxWidth,
    double? maxHeight,
    int? imageQuality,
    int? limit,
    bool? requestFullMetadata = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #pickMultiImage,
          [],
          {
            #maxWidth: maxWidth,
            #maxHeight: maxHeight,
            #imageQuality: imageQuality,
            #limit: limit,
            #requestFullMetadata: requestFullMetadata,
          },
        ),
        returnValue: _i7.Future<List<_i16.XFile>>.value(<_i16.XFile>[]),
        returnValueForMissingStub:
            _i7.Future<List<_i16.XFile>>.value(<_i16.XFile>[]),
      ) as _i7.Future<List<_i16.XFile>>);

  @override
  _i7.Future<_i16.XFile?> pickMedia({
    double? maxWidth,
    double? maxHeight,
    int? imageQuality,
    bool? requestFullMetadata = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #pickMedia,
          [],
          {
            #maxWidth: maxWidth,
            #maxHeight: maxHeight,
            #imageQuality: imageQuality,
            #requestFullMetadata: requestFullMetadata,
          },
        ),
        returnValue: _i7.Future<_i16.XFile?>.value(),
        returnValueForMissingStub: _i7.Future<_i16.XFile?>.value(),
      ) as _i7.Future<_i16.XFile?>);

  @override
  _i7.Future<List<_i16.XFile>> pickMultipleMedia({
    double? maxWidth,
    double? maxHeight,
    int? imageQuality,
    int? limit,
    bool? requestFullMetadata = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #pickMultipleMedia,
          [],
          {
            #maxWidth: maxWidth,
            #maxHeight: maxHeight,
            #imageQuality: imageQuality,
            #limit: limit,
            #requestFullMetadata: requestFullMetadata,
          },
        ),
        returnValue: _i7.Future<List<_i16.XFile>>.value(<_i16.XFile>[]),
        returnValueForMissingStub:
            _i7.Future<List<_i16.XFile>>.value(<_i16.XFile>[]),
      ) as _i7.Future<List<_i16.XFile>>);

  @override
  _i7.Future<_i16.XFile?> pickVideo({
    required _i16.ImageSource? source,
    _i16.CameraDevice? preferredCameraDevice = _i16.CameraDevice.rear,
    Duration? maxDuration,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #pickVideo,
          [],
          {
            #source: source,
            #preferredCameraDevice: preferredCameraDevice,
            #maxDuration: maxDuration,
          },
        ),
        returnValue: _i7.Future<_i16.XFile?>.value(),
        returnValueForMissingStub: _i7.Future<_i16.XFile?>.value(),
      ) as _i7.Future<_i16.XFile?>);

  @override
  _i7.Future<_i16.LostDataResponse> retrieveLostData() => (super.noSuchMethod(
        Invocation.method(
          #retrieveLostData,
          [],
        ),
        returnValue:
            _i7.Future<_i16.LostDataResponse>.value(_FakeLostDataResponse_26(
          this,
          Invocation.method(
            #retrieveLostData,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i7.Future<_i16.LostDataResponse>.value(_FakeLostDataResponse_26(
          this,
          Invocation.method(
            #retrieveLostData,
            [],
          ),
        )),
      ) as _i7.Future<_i16.LostDataResponse>);

  @override
  bool supportsImageSource(_i16.ImageSource? source) => (super.noSuchMethod(
        Invocation.method(
          #supportsImageSource,
          [source],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
}

/// A class which mocks [PageInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockPageInfo extends _i2.Mock implements _i4.PageInfo {
  @override
  set startCursor(String? _startCursor) => super.noSuchMethod(
        Invocation.setter(
          #startCursor,
          _startCursor,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set endCursor(String? _endCursor) => super.noSuchMethod(
        Invocation.setter(
          #endCursor,
          _endCursor,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set hasNextPage(bool? _hasNextPage) => super.noSuchMethod(
        Invocation.setter(
          #hasNextPage,
          _hasNextPage,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set hasPreviousPage(bool? _hasPreviousPage) => super.noSuchMethod(
        Invocation.setter(
          #hasPreviousPage,
          _hasPreviousPage,
        ),
        returnValueForMissingStub: null,
      );
}
