// Mocks generated by Mockito 5.0.10 from annotations
// in talawa/test/helpers/test_helpers.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;
import 'dart:io' as _i14;

import 'package:flutter/src/widgets/framework.dart' as _i1;
import 'package:flutter/src/widgets/navigator.dart' as _i9;
import 'package:gql_http_link/src/link.dart' as _i3;
import 'package:graphql/src/graphql_client.dart' as _i4;
import 'package:mockito/mockito.dart' as _i2;
import 'package:talawa/models/events/event_model.dart' as _i16;
import 'package:talawa/models/organization/org_info.dart' as _i6;
import 'package:talawa/models/post/post_model.dart' as _i12;
import 'package:talawa/models/user/user_info.dart' as _i7;
import 'package:talawa/services/event_service.dart' as _i15;
import 'package:talawa/services/graphql_config.dart' as _i10;
import 'package:talawa/services/navigation_service.dart' as _i8;
import 'package:talawa/services/post_service.dart' as _i11;
import 'package:talawa/services/third_party_service/multi_media_pick_service.dart'
    as _i13;
import 'package:talawa/services/user_config.dart' as _i17;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: comment_references
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeGlobalKey<T extends _i1.State<_i1.StatefulWidget>> extends _i2.Fake
    implements _i1.GlobalKey<T> {}

class _FakeHttpLink extends _i2.Fake implements _i3.HttpLink {}

class _FakeGraphQLClient extends _i2.Fake implements _i4.GraphQLClient {}

class _FakeStreamController<T> extends _i2.Fake
    implements _i5.StreamController<T> {}

class _FakeOrgInfo extends _i2.Fake implements _i6.OrgInfo {}

class _FakeUser extends _i2.Fake implements _i7.User {}

/// A class which mocks [NavigationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockNavigationService extends _i2.Mock implements _i8.NavigationService {
  @override
  _i1.GlobalKey<_i9.NavigatorState> get navigatorKey =>
      (super.noSuchMethod(Invocation.getter(#navigatorKey),
              returnValue: _FakeGlobalKey<_i9.NavigatorState>())
          as _i1.GlobalKey<_i9.NavigatorState>);
  @override
  set navigatorKey(_i1.GlobalKey<_i9.NavigatorState>? _navigatorKey) =>
      super.noSuchMethod(Invocation.setter(#navigatorKey, _navigatorKey),
          returnValueForMissingStub: null);
  @override
  _i5.Future<dynamic> pushScreen(String? routeName, {dynamic arguments}) =>
      (super.noSuchMethod(
          Invocation.method(#pushScreen, [routeName], {#arguments: arguments}),
          returnValue: Future<dynamic>.value()) as _i5.Future<dynamic>);
  @override
  _i5.Future<dynamic> popAndPushScreen(String? routeName,
          {dynamic arguments}) =>
      (super.noSuchMethod(
          Invocation.method(
              #popAndPushScreen, [routeName], {#arguments: arguments}),
          returnValue: Future<dynamic>.value()) as _i5.Future<dynamic>);
  @override
  _i5.Future<dynamic> pushReplacementScreen(String? routeName,
          {dynamic arguments}) =>
      (super.noSuchMethod(
          Invocation.method(
              #pushReplacementScreen, [routeName], {#arguments: arguments}),
          returnValue: Future<dynamic>.value()) as _i5.Future<dynamic>);
  @override
  void fromInviteLink(List<String>? routeNames, List<dynamic>? arguments) =>
      super.noSuchMethod(
          Invocation.method(#fromInviteLink, [routeNames, arguments]),
          returnValueForMissingStub: null);
  @override
  _i5.Future<dynamic> removeAllAndPush(String? routeName, String? tillRoute,
          {dynamic arguments}) =>
      (super.noSuchMethod(
          Invocation.method(#removeAllAndPush, [routeName, tillRoute],
              {#arguments: arguments}),
          returnValue: Future<dynamic>.value()) as _i5.Future<dynamic>);
  @override
  void pushDialog(_i1.Widget? dialog) =>
      super.noSuchMethod(Invocation.method(#pushDialog, [dialog]),
          returnValueForMissingStub: null);
  @override
  void showSnackBar(String? message,
          {Duration? duration = const Duration(seconds: 2)}) =>
      super.noSuchMethod(
          Invocation.method(#showSnackBar, [message], {#duration: duration}),
          returnValueForMissingStub: null);
  @override
  void pop() => super.noSuchMethod(Invocation.method(#pop, []),
      returnValueForMissingStub: null);
}

/// A class which mocks [GraphqlConfig].
///
/// See the documentation for Mockito's code generation for more information.
class MockGraphqlConfig extends _i2.Mock implements _i10.GraphqlConfig {
  @override
  _i3.HttpLink get httpLink => (super.noSuchMethod(Invocation.getter(#httpLink),
      returnValue: _FakeHttpLink()) as _i3.HttpLink);
  @override
  set httpLink(_i3.HttpLink? _httpLink) =>
      super.noSuchMethod(Invocation.setter(#httpLink, _httpLink),
          returnValueForMissingStub: null);
  @override
  // ignore: avoid_setters_without_getters
  set displayImgRoute(String? _displayImgRoute) =>
      super.noSuchMethod(Invocation.setter(#displayImgRoute, _displayImgRoute),
          returnValueForMissingStub: null);
  @override
  _i5.Future<dynamic> getToken() =>
      (super.noSuchMethod(Invocation.method(#getToken, []),
          returnValue: Future<dynamic>.value()) as _i5.Future<dynamic>);
  @override
  _i4.GraphQLClient clientToQuery() =>
      (super.noSuchMethod(Invocation.method(#clientToQuery, []),
          returnValue: _FakeGraphQLClient()) as _i4.GraphQLClient);
  @override
  _i4.GraphQLClient authClient() =>
      (super.noSuchMethod(Invocation.method(#authClient, []),
          returnValue: _FakeGraphQLClient()) as _i4.GraphQLClient);
}

/// A class which mocks [PostService].
///
/// See the documentation for Mockito's code generation for more information.
class MockPostService extends _i2.Mock implements _i11.PostService {
  @override
  _i5.Stream<List<_i12.Post>> get postStream =>
      (super.noSuchMethod(Invocation.getter(#postStream),
              returnValue: Stream<List<_i12.Post>>.empty())
          as _i5.Stream<List<_i12.Post>>);
  @override
  _i5.Stream<_i12.Post> get updatedPostStream =>
      (super.noSuchMethod(Invocation.getter(#updatedPostStream),
          returnValue: Stream<_i12.Post>.empty()) as _i5.Stream<_i12.Post>);
  @override
  void setOrgStreamSubscription() =>
      super.noSuchMethod(Invocation.method(#setOrgStreamSubscription, []),
          returnValueForMissingStub: null);
  @override
  _i5.Future<void> getPosts() =>
      (super.noSuchMethod(Invocation.method(#getPosts, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i5.Future<void>);
  @override
  _i5.Future<void> addLike(String? postID) =>
      (super.noSuchMethod(Invocation.method(#addLike, [postID]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i5.Future<void>);
  @override
  _i5.Future<void> removeLike(String? postID) =>
      (super.noSuchMethod(Invocation.method(#removeLike, [postID]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i5.Future<void>);
  @override
  void addCommentLocally(String? postID) =>
      super.noSuchMethod(Invocation.method(#addCommentLocally, [postID]),
          returnValueForMissingStub: null);
}

/// A class which mocks [MultiMediaPickerService].
///
/// See the documentation for Mockito's code generation for more information.
class MockMultiMediaPickerService extends _i2.Mock
    implements _i13.MultiMediaPickerService {
  @override
  _i5.Stream<dynamic> get fileStream =>
      (super.noSuchMethod(Invocation.getter(#fileStream),
          returnValue: Stream<dynamic>.empty()) as _i5.Stream<dynamic>);
  @override
  _i5.Future<_i14.File?> getPhotoFromGallery({bool? camera = false}) =>
      (super.noSuchMethod(
          Invocation.method(#getPhotoFromGallery, [], {#camera: camera}),
          returnValue: Future<_i14.File?>.value()) as _i5.Future<_i14.File?>);
}

/// A class which mocks [EventService].
///
/// See the documentation for Mockito's code generation for more information.
class MockEventService extends _i2.Mock implements _i15.EventService {
  @override
  _i5.Stream<_i16.Event> get eventStream =>
      (super.noSuchMethod(Invocation.getter(#eventStream),
          returnValue: Stream<_i16.Event>.empty()) as _i5.Stream<_i16.Event>);
  @override
  void setOrgStreamSubscription() =>
      super.noSuchMethod(Invocation.method(#setOrgStreamSubscription, []),
          returnValueForMissingStub: null);
  @override
  _i5.Future<void> getEvents() =>
      (super.noSuchMethod(Invocation.method(#getEvents, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i5.Future<void>);
  @override
  _i5.Future<void> registerForAnEvent(String? eventId) =>
      (super.noSuchMethod(Invocation.method(#registerForAnEvent, [eventId]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future.value()) as _i5.Future<void>);
  @override
  void dispose() => super.noSuchMethod(Invocation.method(#dispose, []),
      returnValueForMissingStub: null);
}

/// A class which mocks [UserConfig].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserConfig extends _i2.Mock implements _i17.UserConfig {
  @override
  _i5.Stream<_i6.OrgInfo> get currentOrfInfoStream =>
      (super.noSuchMethod(Invocation.getter(#currentOrfInfoStream),
          returnValue: Stream<_i6.OrgInfo>.empty()) as _i5.Stream<_i6.OrgInfo>);
  @override
  _i5.StreamController<_i6.OrgInfo> get currentOrgInfoController =>
      (super.noSuchMethod(Invocation.getter(#currentOrgInfoController),
              returnValue: _FakeStreamController<_i6.OrgInfo>())
          as _i5.StreamController<_i6.OrgInfo>);
  @override
  _i6.OrgInfo get currentOrg =>
      (super.noSuchMethod(Invocation.getter(#currentOrg),
          returnValue: _FakeOrgInfo()) as _i6.OrgInfo);
  @override
  String get currentOrgName =>
      (super.noSuchMethod(Invocation.getter(#currentOrgName), returnValue: '')
          as String);
  @override
  set currentOrg(_i6.OrgInfo? org) =>
      super.noSuchMethod(Invocation.setter(#currentOrg, org),
          returnValueForMissingStub: null);
  @override
  _i7.User get currentUser =>
      (super.noSuchMethod(Invocation.getter(#currentUser),
          returnValue: _FakeUser()) as _i7.User);
  @override
  void initialiseStream() =>
      super.noSuchMethod(Invocation.method(#initialiseStream, []),
          returnValueForMissingStub: null);
  @override
  _i5.Future<bool> userLoggedIn() =>
      (super.noSuchMethod(Invocation.method(#userLoggedIn, []),
          returnValue: Future<bool>.value(false)) as _i5.Future<bool>);
  @override
  _i5.Future<dynamic> updateUserJoinedOrg(List<_i6.OrgInfo>? orgDetails) =>
      (super.noSuchMethod(Invocation.method(#updateUserJoinedOrg, [orgDetails]),
          returnValue: Future<dynamic>.value()) as _i5.Future<dynamic>);
  @override
  _i5.Future<dynamic> updateUserCreatedOrg(List<_i6.OrgInfo>? orgDetails) =>
      (super.noSuchMethod(
          Invocation.method(#updateUserCreatedOrg, [orgDetails]),
          returnValue: Future<dynamic>.value()) as _i5.Future<dynamic>);
  @override
  _i5.Future<dynamic> updateUserMemberRequestOrg(
          List<_i6.OrgInfo>? orgDetails) =>
      (super.noSuchMethod(
          Invocation.method(#updateUserMemberRequestOrg, [orgDetails]),
          returnValue: Future<dynamic>.value()) as _i5.Future<dynamic>);
  @override
  _i5.Future<dynamic> updateUserAdminOrg(List<_i6.OrgInfo>? orgDetails) =>
      (super.noSuchMethod(Invocation.method(#updateUserAdminOrg, [orgDetails]),
          returnValue: Future<dynamic>.value()) as _i5.Future<dynamic>);
  @override
  _i5.Future<dynamic> updateAccessToken(
          {String? accessToken, String? refreshToken}) =>
      (super.noSuchMethod(
          Invocation.method(#updateAccessToken, [],
              {#accessToken: accessToken, #refreshToken: refreshToken}),
          returnValue: Future<dynamic>.value()) as _i5.Future<dynamic>);
  @override
  _i5.Future<bool> updateUser(_i7.User? updatedUserDetails) =>
      (super.noSuchMethod(Invocation.method(#updateUser, [updatedUserDetails]),
          returnValue: Future<bool>.value(false)) as _i5.Future<bool>);
  @override
  dynamic saveCurrentOrgInHive(_i6.OrgInfo? saveOrgAsCurrent) =>
      super.noSuchMethod(
          Invocation.method(#saveCurrentOrgInHive, [saveOrgAsCurrent]));
}
