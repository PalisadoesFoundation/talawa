include: package:lint/analysis_options.yaml

analyzer:
  exclude: 
    - lib/generated_plugin_registrant.dart
    - test/helpers/test_helpers.mocks.dart

linter:
  rules:
    # Make constructors the first thing in every class
    sort_constructors_first: true

    # Use parameter order as in json response
    always_put_required_named_parameters_first: false

    # Util classes
    avoid_classes_with_only_static_members: false

    avoid_redundant_argument_values: false

    # Unnecessary use of this in constructors should not be done
    unnecessary_this: false

    # source files name using lowercase_with_underscores
    # lowercase_with_underscores: true

    leading_newlines_in_multiline_strings: false

    always_declare_return_types: false

    type_annotate_public_apis: false
    #always_use_package_imports to make a quick navigation to particular files
    always_use_package_imports: true

    directives_ordering: true

    # In case of production should be set to true
    avoid_print: false

    avoid_unnecessary_containers: false

    prefer_if_elements_to_conditional_expressions: false

    avoid_function_literals_in_foreach_calls: false

    join_return_with_assignment: false

    prefer_const_literals_to_create_immutables: false


    ####################################################
    #### Added to make things work for now. Must be ####
    ############# removed in future PRs ################
    ####################################################

    # Advises to explicitly install any plugin which you are using
    # in your codebase. At many places in our codebase we have used
    # things of a plugin which is not in our pubspec.yaml. Say we have
    # installed plugin A, which in turn internally installs plugin B, as
    # A depends on B, and then we are using functionalities of B, even
    # though we never installed them explicitly; they just got installed.
    #
    # To fix: Uncomment below lint and check for warnings it creates. Then
    # install the dependencies one by one.

    depend_on_referenced_packages: false
    
    # This new lint rule advises to use methods on dynamic objects
    # only after properly type casting. It's quite good and will avoid
    # null errors. 
    # For now, it affects the whole code base; wherever we have done 
    # something like 
    # 
    # ``` 
    # var obj = json_data['obj'];
    # obj.fun_call(param);
    # ```
    #
    # To fix: Turn on this lint and type cast the object of your file as 
    #
    # ```
    # MyObj obj = json_data['obj'] as MyObj;
    # ```
    
    avoid_dynamic_calls: false

    # deprecated_member_use is turned off for file - test/helpers/test_helpers.dart
    # to suppress returnNullOnMissingStub deprecation. 
    # To fix: Remove the lint suppress directive and update to latest API
    